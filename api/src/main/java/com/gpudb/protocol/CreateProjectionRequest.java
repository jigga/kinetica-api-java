/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#createProjection(CreateProjectionRequest)}.
 * <p>
 * Creates a new <a href="../../../../../../concepts/projections/"
 * target="_top">projection</a> of
 * an existing table. A projection represents a subset of the columns
 * (potentially
 * including derived columns) of a table.
 * <p>
 * For projection details and examples, see
 * <a href="../../../../../../concepts/projections/"
 * target="_top">Projections</a>.  For limitations, see
 * <a href="../../../../../../concepts/projections/#limitations-and-cautions"
 * target="_top">Projection Limitations and Cautions</a>.
 * <p>
 * <a href="../../../../../../concepts/window/" target="_top">Window
 * functions</a>, which can perform
 * operations like moving averages, are available through this endpoint as well
 * as
 * {@link com.gpudb.GPUdb#getRecordsByColumnRaw(GetRecordsByColumnRequest)}.
 * <p>
 * A projection can be created with a different
 * <a href="../../../../../../concepts/tables/#shard-keys" target="_top">shard
 * key</a> than the source table.
 * By specifying {@code shard_key}, the projection will be sharded
 * according to the specified columns, regardless of how the source table is
 * sharded.  The source table can even be unsharded or replicated.
 * <p>
 * If {@code tableName} is empty, selection is performed against a single-row
 * virtual table.  This can be useful in executing temporal
 * (<a href="../../../../../../concepts/expressions/#date-time-functions"
 * target="_top">NOW()</a>), identity
 * (<a href="../../../../../../concepts/expressions/#user-security-functions"
 * target="_top">USER()</a>), or
 * constant-based functions
 * (<a href="../../../../../../concepts/expressions/#scalar-functions"
 * target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).
 */
public class CreateProjectionRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("CreateProjectionRequest")
            .namespace("com.gpudb")
            .fields()
                .name("tableName").type().stringType().noDefault()
                .name("projectionName").type().stringType().noDefault()
                .name("columnNames").type().array().items().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * Optional parameters.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_TEMP_TABLE
     * CREATE_TEMP_TABLE}: If {@code true}, a unique temporary table name will
     * be generated in the sys_temp schema and used in place of {@code
     * projectionName}. If {@code persist} is {@code false} (or unspecified),
     * then this is always allowed even if the caller does not have permission
     * to create tables. The generated name is returned in {@code
     * qualified_projection_name}.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#COLLECTION_NAME
     * COLLECTION_NAME}: [DEPRECATED--please specify the containing schema for
     * the projection as part of {@code projectionName} and use {@link
     * com.gpudb.GPUdb#createSchema(CreateSchemaRequest)} to create the schema
     * if non-existent]  Name of a schema for the projection. If the schema is
     * non-existent, it will be automatically created.  The default value is
     * ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#EXPRESSION
     * EXPRESSION}: An optional filter <a
     * href="../../../../../../concepts/expressions/"
     * target="_top">expression</a> to be applied to the source table prior to
     * the projection.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#IS_REPLICATED
     * IS_REPLICATED}: If {@code true} then the projection will be replicated
     * even if the source table is not.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#OFFSET OFFSET}: The
     * number of initial results to skip (this can be useful for paging through
     * the results).  The default value is '0'.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#LIMIT LIMIT}: The
     * number of records to keep.  The default value is '-9999'.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#ORDER_BY ORDER_BY}:
     * Comma-separated list of the columns to be sorted by; e.g. 'timestamp
     * asc, x desc'.  The columns specified must be present in {@code
     * columnNames}.  If any alias is given for any column name, the alias must
     * be used, rather than the original column name.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#CHUNK_SIZE
     * CHUNK_SIZE}: Indicates the number of records per chunk to be used for
     * this projection.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_INDEXES
     * CREATE_INDEXES}: Comma-separated list of columns on which to create
     * indexes on the projection.  The columns specified must be present in
     * {@code columnNames}.  If any alias is given for any column name, the
     * alias must be used, rather than the original column name.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TTL TTL}: Sets the <a
     * href="../../../../../../concepts/ttl/" target="_top">TTL</a> of the
     * projection specified in {@code projectionName}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#SHARD_KEY SHARD_KEY}:
     * Comma-separated list of the columns to be sharded on; e.g. 'column1,
     * column2'.  The columns specified must be present in {@code columnNames}.
     * If any alias is given for any column name, the alias must be used,
     * rather than the original column name.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#PERSIST PERSIST}: If
     * {@code true}, then the projection specified in {@code projectionName}
     * will be persisted and will not expire unless a {@code ttl} is specified.
     * If {@code false}, then the projection will be an in-memory table and
     * will expire unless a {@code ttl} is specified otherwise.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#PRESERVE_DICT_ENCODING
     * PRESERVE_DICT_ENCODING}: If {@code true}, then columns that were dict
     * encoded in the source table will be dict encoded in the projection.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#RETAIN_PARTITIONS
     * RETAIN_PARTITIONS}: Determines whether the created projection will
     * retain the partitioning scheme from the source table.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_TYPE
     * PARTITION_TYPE}: <a
     * href="../../../../../../concepts/tables/#partitioning"
     * target="_top">Partitioning</a> scheme to use.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#RANGE RANGE}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-range"
     * target="_top">range partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#INTERVAL INTERVAL}:
     * Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-interval"
     * target="_top">interval partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#LIST LIST}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-list"
     * target="_top">list partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#HASH HASH}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-hash"
     * target="_top">hash partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#SERIES SERIES}: Use
     * <a href="../../../../../../concepts/tables/#partitioning-by-series"
     * target="_top">series partitioning</a>.
     * </ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_KEYS
     * PARTITION_KEYS}: Comma-separated list of partition keys, which are the
     * columns or column expressions by which records will be assigned to
     * partitions defined by {@code partition_definitions}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_DEFINITIONS
     * PARTITION_DEFINITIONS}: Comma-separated list of partition definitions,
     * whose format depends on the choice of {@code partition_type}.  See <a
     * href="../../../../../../concepts/tables/#partitioning-by-range"
     * target="_top">range partitioning</a>, <a
     * href="../../../../../../concepts/tables/#partitioning-by-interval"
     * target="_top">interval partitioning</a>, <a
     * href="../../../../../../concepts/tables/#partitioning-by-list"
     * target="_top">list partitioning</a>, <a
     * href="../../../../../../concepts/tables/#partitioning-by-hash"
     * target="_top">hash partitioning</a>, or <a
     * href="../../../../../../concepts/tables/#partitioning-by-series"
     * target="_top">series partitioning</a> for example formats.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#IS_AUTOMATIC_PARTITION
     * IS_AUTOMATIC_PARTITION}: If {@code true}, a new partition will be
     * created for values which don't fall into an existing partition.
     * Currently only supported for <a
     * href="../../../../../../concepts/tables/#partitioning-by-list"
     * target="_top">list partitions</a>.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#VIEW_ID VIEW_ID}: ID
     * of view of which this projection is a member.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.CreateProjectionRequest.Options#STRATEGY_DEFINITION
     * STRATEGY_DEFINITION}: The <a
     * href="../../../../../../rm/concepts/#tier-strategies" target="_top">tier
     * strategy</a> for the table and its columns.
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code options}.
     */
    public static final class Options {

        /**
         * If {@code true}, a unique temporary table name will be generated in
         * the sys_temp schema and used in place of {@code projectionName}. If
         * {@code persist} is {@code false} (or unspecified), then this is
         * always allowed even if the caller does not have permission to create
         * tables. The generated name is returned in {@code
         * qualified_projection_name}.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
         */
        public static final String CREATE_TEMP_TABLE = "create_temp_table";
        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * [DEPRECATED--please specify the containing schema for the projection
         * as part of {@code projectionName} and use {@link
         * com.gpudb.GPUdb#createSchema(CreateSchemaRequest)} to create the
         * schema if non-existent]  Name of a schema for the projection. If the
         * schema is non-existent, it will be automatically created.  The
         * default value is ''.
         */
        public static final String COLLECTION_NAME = "collection_name";

        /**
         * An optional filter <a href="../../../../../../concepts/expressions/"
         * target="_top">expression</a> to be applied to the source table prior
         * to the projection.  The default value is ''.
         */
        public static final String EXPRESSION = "expression";

        /**
         * If {@code true} then the projection will be replicated even if the
         * source table is not.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
         */
        public static final String IS_REPLICATED = "is_replicated";

        /**
         * The number of initial results to skip (this can be useful for paging
         * through the results).  The default value is '0'.
         */
        public static final String OFFSET = "offset";

        /**
         * The number of records to keep.  The default value is '-9999'.
         */
        public static final String LIMIT = "limit";

        /**
         * Comma-separated list of the columns to be sorted by; e.g. 'timestamp
         * asc, x desc'.  The columns specified must be present in {@code
         * columnNames}.  If any alias is given for any column name, the alias
         * must be used, rather than the original column name.  The default
         * value is ''.
         */
        public static final String ORDER_BY = "order_by";

        /**
         * Indicates the number of records per chunk to be used for this
         * projection.
         */
        public static final String CHUNK_SIZE = "chunk_size";

        /**
         * Comma-separated list of columns on which to create indexes on the
         * projection.  The columns specified must be present in {@code
         * columnNames}.  If any alias is given for any column name, the alias
         * must be used, rather than the original column name.
         */
        public static final String CREATE_INDEXES = "create_indexes";

        /**
         * Sets the <a href="../../../../../../concepts/ttl/"
         * target="_top">TTL</a> of the projection specified in {@code
         * projectionName}.
         */
        public static final String TTL = "ttl";

        /**
         * Comma-separated list of the columns to be sharded on; e.g. 'column1,
         * column2'.  The columns specified must be present in {@code
         * columnNames}.  If any alias is given for any column name, the alias
         * must be used, rather than the original column name.  The default
         * value is ''.
         */
        public static final String SHARD_KEY = "shard_key";

        /**
         * If {@code true}, then the projection specified in {@code
         * projectionName} will be persisted and will not expire unless a
         * {@code ttl} is specified.   If {@code false}, then the projection
         * will be an in-memory table and will expire unless a {@code ttl} is
         * specified otherwise.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
         */
        public static final String PERSIST = "persist";

        /**
         * If {@code true}, then columns that were dict encoded in the source
         * table will be dict encoded in the projection.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}.
         */
        public static final String PRESERVE_DICT_ENCODING = "preserve_dict_encoding";

        /**
         * Determines whether the created projection will retain the
         * partitioning scheme from the source table.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
         */
        public static final String RETAIN_PARTITIONS = "retain_partitions";

        /**
         * <a href="../../../../../../concepts/tables/#partitioning"
         * target="_top">Partitioning</a> scheme to use.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#RANGE RANGE}: Use
         * <a href="../../../../../../concepts/tables/#partitioning-by-range"
         * target="_top">range partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#INTERVAL
         * INTERVAL}: Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-interval"
         * target="_top">interval partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#LIST LIST}: Use
         * <a href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#HASH HASH}: Use
         * <a href="../../../../../../concepts/tables/#partitioning-by-hash"
         * target="_top">hash partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#SERIES SERIES}:
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-series"
         * target="_top">series partitioning</a>.
         * </ul>
         */
        public static final String PARTITION_TYPE = "partition_type";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-range"
         * target="_top">range partitioning</a>.
         */
        public static final String RANGE = "RANGE";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-interval"
         * target="_top">interval partitioning</a>.
         */
        public static final String INTERVAL = "INTERVAL";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitioning</a>.
         */
        public static final String LIST = "LIST";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-hash"
         * target="_top">hash partitioning</a>.
         */
        public static final String HASH = "HASH";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-series"
         * target="_top">series partitioning</a>.
         */
        public static final String SERIES = "SERIES";

        /**
         * Comma-separated list of partition keys, which are the columns or
         * column expressions by which records will be assigned to partitions
         * defined by {@code partition_definitions}.
         */
        public static final String PARTITION_KEYS = "partition_keys";

        /**
         * Comma-separated list of partition definitions, whose format depends
         * on the choice of {@code partition_type}.  See <a
         * href="../../../../../../concepts/tables/#partitioning-by-range"
         * target="_top">range partitioning</a>, <a
         * href="../../../../../../concepts/tables/#partitioning-by-interval"
         * target="_top">interval partitioning</a>, <a
         * href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitioning</a>, <a
         * href="../../../../../../concepts/tables/#partitioning-by-hash"
         * target="_top">hash partitioning</a>, or <a
         * href="../../../../../../concepts/tables/#partitioning-by-series"
         * target="_top">series partitioning</a> for example formats.
         */
        public static final String PARTITION_DEFINITIONS = "partition_definitions";

        /**
         * If {@code true}, a new partition will be created for values which
         * don't fall into an existing partition.  Currently only supported for
         * <a href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitions</a>.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
         */
        public static final String IS_AUTOMATIC_PARTITION = "is_automatic_partition";

        /**
         * ID of view of which this projection is a member.  The default value
         * is ''.
         */
        public static final String VIEW_ID = "view_id";

        /**
         * The <a href="../../../../../../rm/concepts/#tier-strategies"
         * target="_top">tier strategy</a> for the table and its columns.
         */
        public static final String STRATEGY_DEFINITION = "strategy_definition";

        private Options() {  }
    }

    private String tableName;
    private String projectionName;
    private List<String> columnNames;
    private Map<String, String> options;


    /**
     * Constructs a CreateProjectionRequest object with default parameters.
     */
    public CreateProjectionRequest() {
        tableName = "";
        projectionName = "";
        columnNames = new ArrayList<>();
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs a CreateProjectionRequest object with the specified
     * parameters.
     * 
     * @param tableName  Name of the existing table on which the projection is
     *                   to be applied, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  An empty
     *                   table name creates a projection from a single-row
     *                   virtual table, where columns specified should be
     *                   constants or constant expressions.
     * @param projectionName  Name of the projection to be created, in
     *                        [schema_name.]table_name format, using standard
     *                        <a
     *                        href="../../../../../../concepts/tables/#table-name-resolution"
     *                        target="_top">name resolution rules</a> and
     *                        meeting <a
     *                        href="../../../../../../concepts/tables/#table-naming-criteria"
     *                        target="_top">table naming criteria</a>.
     * @param columnNames  List of columns from {@code tableName} to be
     *                     included in the projection. Can include derived
     *                     columns. Can be specified as aliased via the syntax
     *                     'column_name as alias'.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code projectionName}. If {@code
     *                 persist} is {@code false} (or unspecified), then this is
     *                 always allowed even if the caller does not have
     *                 permission to create tables. The generated name is
     *                 returned in {@code qualified_projection_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the projection as part of {@code
     *                 projectionName} and use {@link
     *                 com.gpudb.GPUdb#createSchema(CreateSchemaRequest)} to
     *                 create the schema if non-existent]  Name of a schema for
     *                 the projection. If the schema is non-existent, it will
     *                 be automatically created.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#EXPRESSION
     *                 EXPRESSION}: An optional filter <a
     *                 href="../../../../../../concepts/expressions/"
     *                 target="_top">expression</a> to be applied to the source
     *                 table prior to the projection.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#IS_REPLICATED
     *                 IS_REPLICATED}: If {@code true} then the projection will
     *                 be replicated even if the source table is not.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#OFFSET
     *                 OFFSET}: The number of initial results to skip (this can
     *                 be useful for paging through the results).  The default
     *                 value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#LIMIT
     *                 LIMIT}: The number of records to keep.  The default
     *                 value is '-9999'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#ORDER_BY
     *                 ORDER_BY}: Comma-separated list of the columns to be
     *                 sorted by; e.g. 'timestamp asc, x desc'.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for this projection.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_INDEXES
     *                 CREATE_INDEXES}: Comma-separated list of columns on
     *                 which to create indexes on the projection.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the projection specified in
     *                 {@code projectionName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#SHARD_KEY
     *                 SHARD_KEY}: Comma-separated list of the columns to be
     *                 sharded on; e.g. 'column1, column2'.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PERSIST
     *                 PERSIST}: If {@code true}, then the projection specified
     *                 in {@code projectionName} will be persisted and will not
     *                 expire unless a {@code ttl} is specified.   If {@code
     *                 false}, then the projection will be an in-memory table
     *                 and will expire unless a {@code ttl} is specified
     *                 otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PRESERVE_DICT_ENCODING
     *                 PRESERVE_DICT_ENCODING}: If {@code true}, then columns
     *                 that were dict encoded in the source table will be dict
     *                 encoded in the projection.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#RETAIN_PARTITIONS
     *                 RETAIN_PARTITIONS}: Determines whether the created
     *                 projection will retain the partitioning scheme from the
     *                 source table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_TYPE
     *                 PARTITION_TYPE}: <a
     *                 href="../../../../../../concepts/tables/#partitioning"
     *                 target="_top">Partitioning</a> scheme to use.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#RANGE
     *                 RANGE}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#INTERVAL
     *                 INTERVAL}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#LIST
     *                 LIST}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#HASH
     *                 HASH}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#SERIES
     *                 SERIES}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a>.
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_KEYS
     *                 PARTITION_KEYS}: Comma-separated list of partition keys,
     *                 which are the columns or column expressions by which
     *                 records will be assigned to partitions defined by {@code
     *                 partition_definitions}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_DEFINITIONS
     *                 PARTITION_DEFINITIONS}: Comma-separated list of
     *                 partition definitions, whose format depends on the
     *                 choice of {@code partition_type}.  See <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>, <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>, <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>, <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>, or <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a> for example
     *                 formats.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#IS_AUTOMATIC_PARTITION
     *                 IS_AUTOMATIC_PARTITION}: If {@code true}, a new
     *                 partition will be created for values which don't fall
     *                 into an existing partition.  Currently only supported
     *                 for <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitions</a>.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#VIEW_ID
     *                 VIEW_ID}: ID of view of which this projection is a
     *                 member.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: The <a
     *                 href="../../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     */
    public CreateProjectionRequest(String tableName, String projectionName, List<String> columnNames, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.projectionName = (projectionName == null) ? "" : projectionName;
        this.columnNames = (columnNames == null) ? new ArrayList<String>() : columnNames;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * 
     * @return Name of the existing table on which the projection is to be
     *         applied, in [schema_name.]table_name format, using standard <a
     *         href="../../../../../../concepts/tables/#table-name-resolution"
     *         target="_top">name resolution rules</a>.  An empty table name
     *         creates a projection from a single-row virtual table, where
     *         columns specified should be constants or constant expressions.
     * 
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * 
     * @param tableName  Name of the existing table on which the projection is
     *                   to be applied, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  An empty
     *                   table name creates a projection from a single-row
     *                   virtual table, where columns specified should be
     *                   constants or constant expressions.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateProjectionRequest setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * 
     * @return Name of the projection to be created, in
     *         [schema_name.]table_name format, using standard <a
     *         href="../../../../../../concepts/tables/#table-name-resolution"
     *         target="_top">name resolution rules</a> and meeting <a
     *         href="../../../../../../concepts/tables/#table-naming-criteria"
     *         target="_top">table naming criteria</a>.
     * 
     */
    public String getProjectionName() {
        return projectionName;
    }

    /**
     * 
     * @param projectionName  Name of the projection to be created, in
     *                        [schema_name.]table_name format, using standard
     *                        <a
     *                        href="../../../../../../concepts/tables/#table-name-resolution"
     *                        target="_top">name resolution rules</a> and
     *                        meeting <a
     *                        href="../../../../../../concepts/tables/#table-naming-criteria"
     *                        target="_top">table naming criteria</a>.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateProjectionRequest setProjectionName(String projectionName) {
        this.projectionName = (projectionName == null) ? "" : projectionName;
        return this;
    }

    /**
     * 
     * @return List of columns from {@code tableName} to be included in the
     *         projection. Can include derived columns. Can be specified as
     *         aliased via the syntax 'column_name as alias'.
     * 
     */
    public List<String> getColumnNames() {
        return columnNames;
    }

    /**
     * 
     * @param columnNames  List of columns from {@code tableName} to be
     *                     included in the projection. Can include derived
     *                     columns. Can be specified as aliased via the syntax
     *                     'column_name as alias'.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateProjectionRequest setColumnNames(List<String> columnNames) {
        this.columnNames = (columnNames == null) ? new ArrayList<String>() : columnNames;
        return this;
    }

    /**
     * 
     * @return Optional parameters.
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_TEMP_TABLE
     *         CREATE_TEMP_TABLE}: If {@code true}, a unique temporary table
     *         name will be generated in the sys_temp schema and used in place
     *         of {@code projectionName}. If {@code persist} is {@code false}
     *         (or unspecified), then this is always allowed even if the caller
     *         does not have permission to create tables. The generated name is
     *         returned in {@code qualified_projection_name}.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#COLLECTION_NAME
     *         COLLECTION_NAME}: [DEPRECATED--please specify the containing
     *         schema for the projection as part of {@code projectionName} and
     *         use {@link com.gpudb.GPUdb#createSchema(CreateSchemaRequest)} to
     *         create the schema if non-existent]  Name of a schema for the
     *         projection. If the schema is non-existent, it will be
     *         automatically created.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#EXPRESSION
     *         EXPRESSION}: An optional filter <a
     *         href="../../../../../../concepts/expressions/"
     *         target="_top">expression</a> to be applied to the source table
     *         prior to the projection.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#IS_REPLICATED
     *         IS_REPLICATED}: If {@code true} then the projection will be
     *         replicated even if the source table is not.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#OFFSET
     *         OFFSET}: The number of initial results to skip (this can be
     *         useful for paging through the results).  The default value is
     *         '0'.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#LIMIT LIMIT}:
     *         The number of records to keep.  The default value is '-9999'.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#ORDER_BY
     *         ORDER_BY}: Comma-separated list of the columns to be sorted by;
     *         e.g. 'timestamp asc, x desc'.  The columns specified must be
     *         present in {@code columnNames}.  If any alias is given for any
     *         column name, the alias must be used, rather than the original
     *         column name.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#CHUNK_SIZE
     *         CHUNK_SIZE}: Indicates the number of records per chunk to be
     *         used for this projection.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_INDEXES
     *         CREATE_INDEXES}: Comma-separated list of columns on which to
     *         create indexes on the projection.  The columns specified must be
     *         present in {@code columnNames}.  If any alias is given for any
     *         column name, the alias must be used, rather than the original
     *         column name.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TTL TTL}:
     *         Sets the <a href="../../../../../../concepts/ttl/"
     *         target="_top">TTL</a> of the projection specified in {@code
     *         projectionName}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#SHARD_KEY
     *         SHARD_KEY}: Comma-separated list of the columns to be sharded
     *         on; e.g. 'column1, column2'.  The columns specified must be
     *         present in {@code columnNames}.  If any alias is given for any
     *         column name, the alias must be used, rather than the original
     *         column name.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#PERSIST
     *         PERSIST}: If {@code true}, then the projection specified in
     *         {@code projectionName} will be persisted and will not expire
     *         unless a {@code ttl} is specified.   If {@code false}, then the
     *         projection will be an in-memory table and will expire unless a
     *         {@code ttl} is specified otherwise.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#PRESERVE_DICT_ENCODING
     *         PRESERVE_DICT_ENCODING}: If {@code true}, then columns that were
     *         dict encoded in the source table will be dict encoded in the
     *         projection.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#RETAIN_PARTITIONS
     *         RETAIN_PARTITIONS}: Determines whether the created projection
     *         will retain the partitioning scheme from the source table.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_TYPE
     *         PARTITION_TYPE}: <a
     *         href="../../../../../../concepts/tables/#partitioning"
     *         target="_top">Partitioning</a> scheme to use.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#RANGE RANGE}:
     *         Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-range"
     *         target="_top">range partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#INTERVAL
     *         INTERVAL}: Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-interval"
     *         target="_top">interval partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#LIST LIST}:
     *         Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-list"
     *         target="_top">list partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#HASH HASH}:
     *         Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-hash"
     *         target="_top">hash partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#SERIES
     *         SERIES}: Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-series"
     *         target="_top">series partitioning</a>.
     *         </ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_KEYS
     *         PARTITION_KEYS}: Comma-separated list of partition keys, which
     *         are the columns or column expressions by which records will be
     *         assigned to partitions defined by {@code partition_definitions}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_DEFINITIONS
     *         PARTITION_DEFINITIONS}: Comma-separated list of partition
     *         definitions, whose format depends on the choice of {@code
     *         partition_type}.  See <a
     *         href="../../../../../../concepts/tables/#partitioning-by-range"
     *         target="_top">range partitioning</a>, <a
     *         href="../../../../../../concepts/tables/#partitioning-by-interval"
     *         target="_top">interval partitioning</a>, <a
     *         href="../../../../../../concepts/tables/#partitioning-by-list"
     *         target="_top">list partitioning</a>, <a
     *         href="../../../../../../concepts/tables/#partitioning-by-hash"
     *         target="_top">hash partitioning</a>, or <a
     *         href="../../../../../../concepts/tables/#partitioning-by-series"
     *         target="_top">series partitioning</a> for example formats.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#IS_AUTOMATIC_PARTITION
     *         IS_AUTOMATIC_PARTITION}: If {@code true}, a new partition will
     *         be created for values which don't fall into an existing
     *         partition.  Currently only supported for <a
     *         href="../../../../../../concepts/tables/#partitioning-by-list"
     *         target="_top">list partitions</a>.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#TRUE TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#FALSE FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#VIEW_ID
     *         VIEW_ID}: ID of view of which this projection is a member.  The
     *         default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateProjectionRequest.Options#STRATEGY_DEFINITION
     *         STRATEGY_DEFINITION}: The <a
     *         href="../../../../../../rm/concepts/#tier-strategies"
     *         target="_top">tier strategy</a> for the table and its columns.
     *         </ul>
     *         The default value is an empty {@link Map}.
     * 
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code projectionName}. If {@code
     *                 persist} is {@code false} (or unspecified), then this is
     *                 always allowed even if the caller does not have
     *                 permission to create tables. The generated name is
     *                 returned in {@code qualified_projection_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the projection as part of {@code
     *                 projectionName} and use {@link
     *                 com.gpudb.GPUdb#createSchema(CreateSchemaRequest)} to
     *                 create the schema if non-existent]  Name of a schema for
     *                 the projection. If the schema is non-existent, it will
     *                 be automatically created.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#EXPRESSION
     *                 EXPRESSION}: An optional filter <a
     *                 href="../../../../../../concepts/expressions/"
     *                 target="_top">expression</a> to be applied to the source
     *                 table prior to the projection.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#IS_REPLICATED
     *                 IS_REPLICATED}: If {@code true} then the projection will
     *                 be replicated even if the source table is not.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#OFFSET
     *                 OFFSET}: The number of initial results to skip (this can
     *                 be useful for paging through the results).  The default
     *                 value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#LIMIT
     *                 LIMIT}: The number of records to keep.  The default
     *                 value is '-9999'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#ORDER_BY
     *                 ORDER_BY}: Comma-separated list of the columns to be
     *                 sorted by; e.g. 'timestamp asc, x desc'.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for this projection.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_INDEXES
     *                 CREATE_INDEXES}: Comma-separated list of columns on
     *                 which to create indexes on the projection.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the projection specified in
     *                 {@code projectionName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#SHARD_KEY
     *                 SHARD_KEY}: Comma-separated list of the columns to be
     *                 sharded on; e.g. 'column1, column2'.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PERSIST
     *                 PERSIST}: If {@code true}, then the projection specified
     *                 in {@code projectionName} will be persisted and will not
     *                 expire unless a {@code ttl} is specified.   If {@code
     *                 false}, then the projection will be an in-memory table
     *                 and will expire unless a {@code ttl} is specified
     *                 otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PRESERVE_DICT_ENCODING
     *                 PRESERVE_DICT_ENCODING}: If {@code true}, then columns
     *                 that were dict encoded in the source table will be dict
     *                 encoded in the projection.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#RETAIN_PARTITIONS
     *                 RETAIN_PARTITIONS}: Determines whether the created
     *                 projection will retain the partitioning scheme from the
     *                 source table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_TYPE
     *                 PARTITION_TYPE}: <a
     *                 href="../../../../../../concepts/tables/#partitioning"
     *                 target="_top">Partitioning</a> scheme to use.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#RANGE
     *                 RANGE}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#INTERVAL
     *                 INTERVAL}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#LIST
     *                 LIST}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#HASH
     *                 HASH}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#SERIES
     *                 SERIES}: Use <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a>.
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_KEYS
     *                 PARTITION_KEYS}: Comma-separated list of partition keys,
     *                 which are the columns or column expressions by which
     *                 records will be assigned to partitions defined by {@code
     *                 partition_definitions}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_DEFINITIONS
     *                 PARTITION_DEFINITIONS}: Comma-separated list of
     *                 partition definitions, whose format depends on the
     *                 choice of {@code partition_type}.  See <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>, <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>, <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>, <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>, or <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a> for example
     *                 formats.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#IS_AUTOMATIC_PARTITION
     *                 IS_AUTOMATIC_PARTITION}: If {@code true}, a new
     *                 partition will be created for values which don't fall
     *                 into an existing partition.  Currently only supported
     *                 for <a
     *                 href="../../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitions</a>.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#VIEW_ID
     *                 VIEW_ID}: ID of view of which this projection is a
     *                 member.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: The <a
     *                 href="../../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateProjectionRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableName;

            case 1:
                return this.projectionName;

            case 2:
                return this.columnNames;

            case 3:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableName = (String)value;
                break;

            case 1:
                this.projectionName = (String)value;
                break;

            case 2:
                this.columnNames = (List<String>)value;
                break;

            case 3:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        CreateProjectionRequest that = (CreateProjectionRequest)obj;

        return ( this.tableName.equals( that.tableName )
                 && this.projectionName.equals( that.projectionName )
                 && this.columnNames.equals( that.columnNames )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableName ) );
        builder.append( ", " );
        builder.append( gd.toString( "projectionName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.projectionName ) );
        builder.append( ", " );
        builder.append( gd.toString( "columnNames" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.columnNames ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + this.projectionName.hashCode();
        hashCode = (31 * hashCode) + this.columnNames.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

}
