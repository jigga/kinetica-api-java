/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#hasRole(HasRoleRequest)}.
 */
public class HasRoleResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("HasRoleResponse")
            .namespace("com.gpudb")
            .fields()
                .name("principal").type().stringType().noDefault()
                .name("role").type().stringType().noDefault()
                .name("hasRole").type().booleanType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * Indicates whether the specified user has membership in the specified
     * target {@code role}.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.HasRoleResponse.HasRole#TRUE
     * TRUE}: User has membership in the role
     *         <li> {@link com.gpudb.protocol.HasRoleResponse.HasRole#FALSE
     * FALSE}: User does not have membership in the role
     * </ul>
     * A set of string constants for the parameter {@code hasRole}.
     */
    public static final class HasRole {

        /**
         * User has membership in the role
         */
        public static final String TRUE = "true";

        /**
         * User does not have membership in the role
         */
        public static final String FALSE = "false";

        private HasRole() {  }
    }


    /**
     * Additional information.
     * <ul>
     *         <li> {@link com.gpudb.protocol.HasRoleResponse.Info#DIRECT
     * DIRECT}: {@code true} when principal is directly a member of the role.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.HasRoleResponse.Info#TRUE TRUE}
     *         <li> {@link com.gpudb.protocol.HasRoleResponse.Info#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.HasRoleResponse.Info#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code info}.
     */
    public static final class Info {

        /**
         * {@code true} when principal is directly a member of the role.
         * Supported values:
         * <ul>
         *         <li> {@link com.gpudb.protocol.HasRoleResponse.Info#TRUE
         * TRUE}
         *         <li> {@link com.gpudb.protocol.HasRoleResponse.Info#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.HasRoleResponse.Info#FALSE FALSE}.
         */
        public static final String DIRECT = "direct";
        public static final String TRUE = "true";
        public static final String FALSE = "false";

        private Info() {  }
    }

    private String principal;
    private String role;
    private boolean hasRole;
    private Map<String, String> info;


    /**
     * Constructs a HasRoleResponse object with default parameters.
     */
    public HasRoleResponse() {
    }

    /**
     * 
     * @return Value of {@code principal}
     * 
     */
    public String getPrincipal() {
        return principal;
    }

    /**
     * 
     * @param principal  Value of {@code principal}
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public HasRoleResponse setPrincipal(String principal) {
        this.principal = (principal == null) ? "" : principal;
        return this;
    }

    /**
     * 
     * @return {@code role} for which membership is being checked
     * 
     */
    public String getRole() {
        return role;
    }

    /**
     * 
     * @param role  {@code role} for which membership is being checked
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public HasRoleResponse setRole(String role) {
        this.role = (role == null) ? "" : role;
        return this;
    }

    /**
     * 
     * @return Indicates whether the specified user has membership in the
     *         specified target {@code role}.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.HasRoleResponse.HasRole#TRUE TRUE}: User has
     *         membership in the role
     *                 <li> {@link
     *         com.gpudb.protocol.HasRoleResponse.HasRole#FALSE FALSE}: User
     *         does not have membership in the role
     *         </ul>
     * 
     */
    public boolean getHasRole() {
        return hasRole;
    }

    /**
     * 
     * @param hasRole  Indicates whether the specified user has membership in
     *                 the specified target {@code role}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleResponse.HasRole#TRUE TRUE}:
     *                 User has membership in the role
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleResponse.HasRole#FALSE FALSE}:
     *                 User does not have membership in the role
     *                 </ul>
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public HasRoleResponse setHasRole(boolean hasRole) {
        this.hasRole = hasRole;
        return this;
    }

    /**
     * 
     * @return Additional information.
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.HasRoleResponse.Info#DIRECT DIRECT}: {@code
     *         true} when principal is directly a member of the role.
     *         Supported values:
     *         <ul>
     *                 <li> {@link com.gpudb.protocol.HasRoleResponse.Info#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.HasRoleResponse.Info#FALSE FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.HasRoleResponse.Info#FALSE FALSE}.
     *         </ul>
     *         The default value is an empty {@link Map}.
     * 
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * 
     * @param info  Additional information.
     *              <ul>
     *                      <li> {@link
     *              com.gpudb.protocol.HasRoleResponse.Info#DIRECT DIRECT}:
     *              {@code true} when principal is directly a member of the
     *              role.
     *              Supported values:
     *              <ul>
     *                      <li> {@link
     *              com.gpudb.protocol.HasRoleResponse.Info#TRUE TRUE}
     *                      <li> {@link
     *              com.gpudb.protocol.HasRoleResponse.Info#FALSE FALSE}
     *              </ul>
     *              The default value is {@link
     *              com.gpudb.protocol.HasRoleResponse.Info#FALSE FALSE}.
     *              </ul>
     *              The default value is an empty {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public HasRoleResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.principal;

            case 1:
                return this.role;

            case 2:
                return this.hasRole;

            case 3:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.principal = (String)value;
                break;

            case 1:
                this.role = (String)value;
                break;

            case 2:
                this.hasRole = (Boolean)value;
                break;

            case 3:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        HasRoleResponse that = (HasRoleResponse)obj;

        return ( this.principal.equals( that.principal )
                 && this.role.equals( that.role )
                 && ( this.hasRole == that.hasRole )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "principal" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.principal ) );
        builder.append( ", " );
        builder.append( gd.toString( "role" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.role ) );
        builder.append( ", " );
        builder.append( gd.toString( "hasRole" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.hasRole ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.principal.hashCode();
        hashCode = (31 * hashCode) + this.role.hashCode();
        hashCode = (31 * hashCode) + ((Boolean)this.hasRole).hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }

}
