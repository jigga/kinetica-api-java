/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link com.gpudb.GPUdb#hasRole(HasRoleRequest)
 * GPUdb.hasRole}.
 */
public class HasRoleResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("HasRoleResponse")
            .namespace("com.gpudb")
            .fields()
                .name("principal").type().stringType().noDefault()
                .name("role").type().stringType().noDefault()
                .name("hasRole").type().booleanType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * A set of string constants for the {@link HasRoleResponse} parameter
     * {@link #getHasRole() hasRole}.
     * <p>
     * Indicates whether the specified user has membership in the specified
     * target {@link com.gpudb.protocol.HasRoleRequest#getRole() role}.
     */
    public static final class HasRole {
        /**
         * User has membership in the role
         */
        public static final String TRUE = "true";

        /**
         * User does not have membership in the role
         */
        public static final String FALSE = "false";

        private HasRole() {  }
    }

    /**
     * A set of string constants for the {@link HasRoleResponse} parameter
     * {@link #getInfo() info}.
     * <p>
     * Additional information.
     */
    public static final class Info {
        /**
         * {@link Info#TRUE TRUE} when principal is directly a member of the
         * role.
         * Supported values:
         * <ul>
         *     <li>{@link Info#TRUE TRUE}
         *     <li>{@link Info#FALSE FALSE}
         * </ul>
         * The default value is {@link Info#FALSE FALSE}.
         */
        public static final String DIRECT = "direct";

        public static final String TRUE = "true";
        public static final String FALSE = "false";

        private Info() {  }
    }

    private String principal;
    private String role;
    private boolean hasRole;
    private Map<String, String> info;

    /**
     * Constructs a HasRoleResponse object with default parameters.
     */
    public HasRoleResponse() {
    }

    /**
     * Value of {@link com.gpudb.protocol.HasRoleRequest#getPrincipal()
     * principal}
     *
     * @return The current value of {@code principal}.
     */
    public String getPrincipal() {
        return principal;
    }

    /**
     * Value of {@link com.gpudb.protocol.HasRoleRequest#getPrincipal()
     * principal}
     *
     * @param principal  The new value for {@code principal}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public HasRoleResponse setPrincipal(String principal) {
        this.principal = (principal == null) ? "" : principal;
        return this;
    }

    /**
     * {@link com.gpudb.protocol.HasRoleRequest#getRole() role} for which
     * membership is being checked
     *
     * @return The current value of {@code role}.
     */
    public String getRole() {
        return role;
    }

    /**
     * {@link com.gpudb.protocol.HasRoleRequest#getRole() role} for which
     * membership is being checked
     *
     * @param role  The new value for {@code role}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public HasRoleResponse setRole(String role) {
        this.role = (role == null) ? "" : role;
        return this;
    }

    /**
     * Indicates whether the specified user has membership in the specified
     * target {@link com.gpudb.protocol.HasRoleRequest#getRole() role}.
     * Supported values:
     * <ul>
     *     <li>{@link HasRole#TRUE TRUE}: User has membership in the role
     *     <li>{@link HasRole#FALSE FALSE}: User does not have membership in
     *         the role
     * </ul>
     *
     * @return The current value of {@code hasRole}.
     */
    public boolean getHasRole() {
        return hasRole;
    }

    /**
     * Indicates whether the specified user has membership in the specified
     * target {@link com.gpudb.protocol.HasRoleRequest#getRole() role}.
     * Supported values:
     * <ul>
     *     <li>{@link HasRole#TRUE TRUE}: User has membership in the role
     *     <li>{@link HasRole#FALSE FALSE}: User does not have membership in
     *         the role
     * </ul>
     *
     * @param hasRole  The new value for {@code hasRole}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public HasRoleResponse setHasRole(boolean hasRole) {
        this.hasRole = hasRole;
        return this;
    }

    /**
     * Additional information.
     * <ul>
     *     <li>{@link Info#DIRECT DIRECT}: {@link Info#TRUE TRUE} when
     *         principal is directly a member of the role.
     *         Supported values:
     *         <ul>
     *             <li>{@link Info#TRUE TRUE}
     *             <li>{@link Info#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Info#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     * <ul>
     *     <li>{@link Info#DIRECT DIRECT}: {@link Info#TRUE TRUE} when
     *         principal is directly a member of the role.
     *         Supported values:
     *         <ul>
     *             <li>{@link Info#TRUE TRUE}
     *             <li>{@link Info#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Info#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public HasRoleResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.principal;

            case 1:
                return this.role;

            case 2:
                return this.hasRole;

            case 3:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.principal = (String)value;
                break;

            case 1:
                this.role = (String)value;
                break;

            case 2:
                this.hasRole = (Boolean)value;
                break;

            case 3:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        HasRoleResponse that = (HasRoleResponse)obj;

        return ( this.principal.equals( that.principal )
                 && this.role.equals( that.role )
                 && ( this.hasRole == that.hasRole )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "principal" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.principal ) );
        builder.append( ", " );
        builder.append( gd.toString( "role" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.role ) );
        builder.append( ", " );
        builder.append( gd.toString( "hasRole" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.hasRole ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.principal.hashCode();
        hashCode = (31 * hashCode) + this.role.hashCode();
        hashCode = (31 * hashCode) + ((Boolean)this.hasRole).hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}
