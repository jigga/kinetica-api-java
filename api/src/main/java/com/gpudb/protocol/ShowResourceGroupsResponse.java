/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#showResourceGroups(ShowResourceGroupsRequest)
 * GPUdb.showResourceGroups}.
 */
public class ShowResourceGroupsResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowResourceGroupsResponse")
            .namespace("com.gpudb")
            .fields()
                .name("groups").type().array().items().map().values().stringType().noDefault()
                .name("rankUsage").type().map().values().stringType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private List<Map<String, String>> groups;
    private Map<String, String> rankUsage;
    private Map<String, String> info;

    /**
     * Constructs a ShowResourceGroupsResponse object with default parameters.
     */
    public ShowResourceGroupsResponse() {
    }

    /**
     * Map of resource group information.
     *
     * @return The current value of {@code groups}.
     */
    public List<Map<String, String>> getGroups() {
        return groups;
    }

    /**
     * Map of resource group information.
     *
     * @param groups  The new value for {@code groups}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowResourceGroupsResponse setGroups(List<Map<String, String>> groups) {
        this.groups = (groups == null) ? new ArrayList<Map<String, String>>() : groups;
        return this;
    }

    /**
     * Tier usage across ranks. Layout is:
     * response.rank_usage[rank_number][resource_group_name] = group_usage (as
     * stringified json)
     *
     * @return The current value of {@code rankUsage}.
     */
    public Map<String, String> getRankUsage() {
        return rankUsage;
    }

    /**
     * Tier usage across ranks. Layout is:
     * response.rank_usage[rank_number][resource_group_name] = group_usage (as
     * stringified json)
     *
     * @param rankUsage  The new value for {@code rankUsage}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowResourceGroupsResponse setRankUsage(Map<String, String> rankUsage) {
        this.rankUsage = (rankUsage == null) ? new LinkedHashMap<String, String>() : rankUsage;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowResourceGroupsResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.groups;

            case 1:
                return this.rankUsage;

            case 2:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.groups = (List<Map<String, String>>)value;
                break;

            case 1:
                this.rankUsage = (Map<String, String>)value;
                break;

            case 2:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowResourceGroupsResponse that = (ShowResourceGroupsResponse)obj;

        return ( this.groups.equals( that.groups )
                 && this.rankUsage.equals( that.rankUsage )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "groups" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.groups ) );
        builder.append( ", " );
        builder.append( gd.toString( "rankUsage" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.rankUsage ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.groups.hashCode();
        hashCode = (31 * hashCode) + this.rankUsage.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}
