/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#updateRecords(UpdateRecordsRequest) GPUdb.updateRecords}.
 */
public class UpdateRecordsResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("UpdateRecordsResponse")
            .namespace("com.gpudb")
            .fields()
                .name("countUpdated").type().longType().noDefault()
                .name("countsUpdated").type().array().items().longType().noDefault()
                .name("countInserted").type().longType().noDefault()
                .name("countsInserted").type().array().items().longType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private long countUpdated;
    private List<Long> countsUpdated;
    private long countInserted;
    private List<Long> countsInserted;
    private Map<String, String> info;

    /**
     * Constructs an UpdateRecordsResponse object with default parameters.
     */
    public UpdateRecordsResponse() {
    }

    /**
     * Total number of records updated.
     *
     * @return The current value of {@code countUpdated}.
     */
    public long getCountUpdated() {
        return countUpdated;
    }

    /**
     * Total number of records updated.
     *
     * @param countUpdated  The new value for {@code countUpdated}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public UpdateRecordsResponse setCountUpdated(long countUpdated) {
        this.countUpdated = countUpdated;
        return this;
    }

    /**
     * Total number of records updated per predicate in {@link
     * com.gpudb.protocol.UpdateRecordsRequest#getExpressions() expressions}.
     *
     * @return The current value of {@code countsUpdated}.
     */
    public List<Long> getCountsUpdated() {
        return countsUpdated;
    }

    /**
     * Total number of records updated per predicate in {@link
     * com.gpudb.protocol.UpdateRecordsRequest#getExpressions() expressions}.
     *
     * @param countsUpdated  The new value for {@code countsUpdated}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public UpdateRecordsResponse setCountsUpdated(List<Long> countsUpdated) {
        this.countsUpdated = (countsUpdated == null) ? new ArrayList<Long>() : countsUpdated;
        return this;
    }

    /**
     * Total number of records inserted (due to expressions not matching any
     * existing records).
     *
     * @return The current value of {@code countInserted}.
     */
    public long getCountInserted() {
        return countInserted;
    }

    /**
     * Total number of records inserted (due to expressions not matching any
     * existing records).
     *
     * @param countInserted  The new value for {@code countInserted}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public UpdateRecordsResponse setCountInserted(long countInserted) {
        this.countInserted = countInserted;
        return this;
    }

    /**
     * Total number of records inserted per predicate in {@link
     * com.gpudb.protocol.UpdateRecordsRequest#getExpressions() expressions}
     * (will be either 0 or 1 for each expression).
     *
     * @return The current value of {@code countsInserted}.
     */
    public List<Long> getCountsInserted() {
        return countsInserted;
    }

    /**
     * Total number of records inserted per predicate in {@link
     * com.gpudb.protocol.UpdateRecordsRequest#getExpressions() expressions}
     * (will be either 0 or 1 for each expression).
     *
     * @param countsInserted  The new value for {@code countsInserted}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public UpdateRecordsResponse setCountsInserted(List<Long> countsInserted) {
        this.countsInserted = (countsInserted == null) ? new ArrayList<Long>() : countsInserted;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public UpdateRecordsResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.countUpdated;

            case 1:
                return this.countsUpdated;

            case 2:
                return this.countInserted;

            case 3:
                return this.countsInserted;

            case 4:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.countUpdated = (Long)value;
                break;

            case 1:
                this.countsUpdated = (List<Long>)value;
                break;

            case 2:
                this.countInserted = (Long)value;
                break;

            case 3:
                this.countsInserted = (List<Long>)value;
                break;

            case 4:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        UpdateRecordsResponse that = (UpdateRecordsResponse)obj;

        return ( ( this.countUpdated == that.countUpdated )
                 && this.countsUpdated.equals( that.countsUpdated )
                 && ( this.countInserted == that.countInserted )
                 && this.countsInserted.equals( that.countsInserted )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "countUpdated" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.countUpdated ) );
        builder.append( ", " );
        builder.append( gd.toString( "countsUpdated" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.countsUpdated ) );
        builder.append( ", " );
        builder.append( gd.toString( "countInserted" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.countInserted ) );
        builder.append( ", " );
        builder.append( gd.toString( "countsInserted" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.countsInserted ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + ((Long)this.countUpdated).hashCode();
        hashCode = (31 * hashCode) + this.countsUpdated.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.countInserted).hashCode();
        hashCode = (31 * hashCode) + this.countsInserted.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}
