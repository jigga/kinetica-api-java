/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#createVideo(CreateVideoRequest)}.
 * <p>
 * Creates a job to generate a sequence of raster images that visualize data
 * over a specified time.
 */
public class CreateVideoRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("CreateVideoRequest")
            .namespace("com.gpudb")
            .fields()
                .name("attribute").type().stringType().noDefault()
                .name("begin").type().stringType().noDefault()
                .name("durationSeconds").type().doubleType().noDefault()
                .name("end").type().stringType().noDefault()
                .name("framesPerSecond").type().doubleType().noDefault()
                .name("style").type().stringType().noDefault()
                .name("path").type().stringType().noDefault()
                .name("styleParameters").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * The name of the visualize mode; should correspond to the schema used for
     * the {@code styleParameters} field.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Style#CHART
     * CHART}
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Style#RASTER
     * RASTER}
     *         <li> {@link
     * com.gpudb.protocol.CreateVideoRequest.Style#CLASSBREAK CLASSBREAK}
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Style#CONTOUR
     * CONTOUR}
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Style#HEATMAP
     * HEATMAP}
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Style#LABELS
     * LABELS}
     * </ul>
     * A set of string constants for the parameter {@code style}.
     */
    public static final class Style {
        public static final String CHART = "chart";
        public static final String RASTER = "raster";
        public static final String CLASSBREAK = "classbreak";
        public static final String CONTOUR = "contour";
        public static final String HEATMAP = "heatmap";
        public static final String LABELS = "labels";

        private Style() {  }
    }


    /**
     * Optional parameters.
     * <ul>
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Options#TTL
     * TTL}: Sets the <a href="../../../../../../concepts/ttl/"
     * target="_top">TTL</a> of the video.
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Options#WINDOW
     * WINDOW}: Specified using the data-type corresponding to the {@code
     * attribute}. For a window of size W, a video frame rendered for time t
     * will visualize data in the interval [t-W,t]. The minimum window size is
     * the interval between successive frames.  The minimum value is the
     * default.  If a value less than the minimum value is specified, it is
     * replaced with the minimum window size.  Larger values will make changes
     * throughout the video appear more smooth while smaller values will
     * capture fast variations in the data.
     *         <li> {@link
     * com.gpudb.protocol.CreateVideoRequest.Options#NO_ERROR_IF_EXISTS
     * NO_ERROR_IF_EXISTS}: If {@code true}, does not return an error if the
     * video already exists.  Ignored if {@code replace_if_exists} is {@code
     * true}.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     * FALSE}
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Options#TRUE
     * TRUE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.CreateVideoRequest.Options#REPLACE_IF_EXISTS
     * REPLACE_IF_EXISTS}: If {@code true}, deletes any existing video with the
     * same path before creating a new video.
     * Supported values:
     * <ul>
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     * FALSE}
     *         <li> {@link com.gpudb.protocol.CreateVideoRequest.Options#TRUE
     * TRUE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code options}.
     */
    public static final class Options {

        /**
         * Sets the <a href="../../../../../../concepts/ttl/"
         * target="_top">TTL</a> of the video.
         */
        public static final String TTL = "ttl";

        /**
         * Specified using the data-type corresponding to the {@code
         * attribute}. For a window of size W, a video frame rendered for time
         * t will visualize data in the interval [t-W,t]. The minimum window
         * size is the interval between successive frames.  The minimum value
         * is the default.  If a value less than the minimum value is
         * specified, it is replaced with the minimum window size.  Larger
         * values will make changes throughout the video appear more smooth
         * while smaller values will capture fast variations in the data.
         */
        public static final String WINDOW = "window";

        /**
         * If {@code true}, does not return an error if the video already
         * exists.  Ignored if {@code replace_if_exists} is {@code true}.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}
         *         <li> {@link
         * com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}.
         */
        public static final String NO_ERROR_IF_EXISTS = "no_error_if_exists";
        public static final String FALSE = "false";
        public static final String TRUE = "true";

        /**
         * If {@code true}, deletes any existing video with the same path
         * before creating a new video.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}
         *         <li> {@link
         * com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}.
         */
        public static final String REPLACE_IF_EXISTS = "replace_if_exists";

        private Options() {  }
    }

    private String attribute;
    private String begin;
    private double durationSeconds;
    private String end;
    private double framesPerSecond;
    private String style;
    private String path;
    private String styleParameters;
    private Map<String, String> options;


    /**
     * Constructs a CreateVideoRequest object with default parameters.
     */
    public CreateVideoRequest() {
        attribute = "";
        begin = "";
        end = "";
        style = "";
        path = "";
        styleParameters = "";
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs a CreateVideoRequest object with the specified parameters.
     * 
     * @param attribute  The animated attribute to map to the video's frames.
     *                   Must be present in the LAYERS specified for the
     *                   visualization. This is often a time-related field but
     *                   may be any numeric type.
     * @param begin  The start point for the video. Accepts an expression
     *               evaluable over the {@code attribute}.
     * @param durationSeconds  Seconds of video to produce
     * @param end  The end point for the video. Accepts an expression evaluable
     *             over the {@code attribute}.
     * @param framesPerSecond  The presentation frame rate of the encoded video
     *                         in frames per second.
     * @param style  The name of the visualize mode; should correspond to the
     *               schema used for the {@code styleParameters} field.
     *               Supported values:
     *               <ul>
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CHART CHART}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#RASTER RASTER}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CLASSBREAK
     *               CLASSBREAK}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CONTOUR
     *               CONTOUR}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#HEATMAP
     *               HEATMAP}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#LABELS LABELS}
     *               </ul>
     * @param path  Fully-qualified <a href="../../../../../../tools/kifs/"
     *              target="_top">KiFS</a> path.  Write access is required. A
     *              file must not exist at that path, unless {@code
     *              replace_if_exists} is {@code true}.
     * @param styleParameters  A string containing the JSON-encoded visualize
     *                         request.  Must correspond to the visualize mode
     *                         specified in the {@code style} field.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the video.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#WINDOW
     *                 WINDOW}: Specified using the data-type corresponding to
     *                 the {@code attribute}. For a window of size W, a video
     *                 frame rendered for time t will visualize data in the
     *                 interval [t-W,t]. The minimum window size is the
     *                 interval between successive frames.  The minimum value
     *                 is the default.  If a value less than the minimum value
     *                 is specified, it is replaced with the minimum window
     *                 size.  Larger values will make changes throughout the
     *                 video appear more smooth while smaller values will
     *                 capture fast variations in the data.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#NO_ERROR_IF_EXISTS
     *                 NO_ERROR_IF_EXISTS}: If {@code true}, does not return an
     *                 error if the video already exists.  Ignored if {@code
     *                 replace_if_exists} is {@code true}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#REPLACE_IF_EXISTS
     *                 REPLACE_IF_EXISTS}: If {@code true}, deletes any
     *                 existing video with the same path before creating a new
     *                 video.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     */
    public CreateVideoRequest(String attribute, String begin, double durationSeconds, String end, double framesPerSecond, String style, String path, String styleParameters, Map<String, String> options) {
        this.attribute = (attribute == null) ? "" : attribute;
        this.begin = (begin == null) ? "" : begin;
        this.durationSeconds = durationSeconds;
        this.end = (end == null) ? "" : end;
        this.framesPerSecond = framesPerSecond;
        this.style = (style == null) ? "" : style;
        this.path = (path == null) ? "" : path;
        this.styleParameters = (styleParameters == null) ? "" : styleParameters;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * 
     * @return The animated attribute to map to the video's frames. Must be
     *         present in the LAYERS specified for the visualization. This is
     *         often a time-related field but may be any numeric type.
     * 
     */
    public String getAttribute() {
        return attribute;
    }

    /**
     * 
     * @param attribute  The animated attribute to map to the video's frames.
     *                   Must be present in the LAYERS specified for the
     *                   visualization. This is often a time-related field but
     *                   may be any numeric type.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setAttribute(String attribute) {
        this.attribute = (attribute == null) ? "" : attribute;
        return this;
    }

    /**
     * 
     * @return The start point for the video. Accepts an expression evaluable
     *         over the {@code attribute}.
     * 
     */
    public String getBegin() {
        return begin;
    }

    /**
     * 
     * @param begin  The start point for the video. Accepts an expression
     *               evaluable over the {@code attribute}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setBegin(String begin) {
        this.begin = (begin == null) ? "" : begin;
        return this;
    }

    /**
     * 
     * @return Seconds of video to produce
     * 
     */
    public double getDurationSeconds() {
        return durationSeconds;
    }

    /**
     * 
     * @param durationSeconds  Seconds of video to produce
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setDurationSeconds(double durationSeconds) {
        this.durationSeconds = durationSeconds;
        return this;
    }

    /**
     * 
     * @return The end point for the video. Accepts an expression evaluable
     *         over the {@code attribute}.
     * 
     */
    public String getEnd() {
        return end;
    }

    /**
     * 
     * @param end  The end point for the video. Accepts an expression evaluable
     *             over the {@code attribute}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setEnd(String end) {
        this.end = (end == null) ? "" : end;
        return this;
    }

    /**
     * 
     * @return The presentation frame rate of the encoded video in frames per
     *         second.
     * 
     */
    public double getFramesPerSecond() {
        return framesPerSecond;
    }

    /**
     * 
     * @param framesPerSecond  The presentation frame rate of the encoded video
     *                         in frames per second.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setFramesPerSecond(double framesPerSecond) {
        this.framesPerSecond = framesPerSecond;
        return this;
    }

    /**
     * 
     * @return The name of the visualize mode; should correspond to the schema
     *         used for the {@code styleParameters} field.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Style#CHART CHART}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Style#RASTER RASTER}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Style#CLASSBREAK
     *         CLASSBREAK}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Style#CONTOUR CONTOUR}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Style#HEATMAP HEATMAP}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Style#LABELS LABELS}
     *         </ul>
     * 
     */
    public String getStyle() {
        return style;
    }

    /**
     * 
     * @param style  The name of the visualize mode; should correspond to the
     *               schema used for the {@code styleParameters} field.
     *               Supported values:
     *               <ul>
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CHART CHART}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#RASTER RASTER}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CLASSBREAK
     *               CLASSBREAK}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CONTOUR
     *               CONTOUR}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#HEATMAP
     *               HEATMAP}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#LABELS LABELS}
     *               </ul>
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setStyle(String style) {
        this.style = (style == null) ? "" : style;
        return this;
    }

    /**
     * 
     * @return Fully-qualified <a href="../../../../../../tools/kifs/"
     *         target="_top">KiFS</a> path.  Write access is required. A file
     *         must not exist at that path, unless {@code replace_if_exists} is
     *         {@code true}.
     * 
     */
    public String getPath() {
        return path;
    }

    /**
     * 
     * @param path  Fully-qualified <a href="../../../../../../tools/kifs/"
     *              target="_top">KiFS</a> path.  Write access is required. A
     *              file must not exist at that path, unless {@code
     *              replace_if_exists} is {@code true}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setPath(String path) {
        this.path = (path == null) ? "" : path;
        return this;
    }

    /**
     * 
     * @return A string containing the JSON-encoded visualize request.  Must
     *         correspond to the visualize mode specified in the {@code style}
     *         field.
     * 
     */
    public String getStyleParameters() {
        return styleParameters;
    }

    /**
     * 
     * @param styleParameters  A string containing the JSON-encoded visualize
     *                         request.  Must correspond to the visualize mode
     *                         specified in the {@code style} field.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setStyleParameters(String styleParameters) {
        this.styleParameters = (styleParameters == null) ? "" : styleParameters;
        return this;
    }

    /**
     * 
     * @return Optional parameters.
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#TTL TTL}: Sets the
     *         <a href="../../../../../../concepts/ttl/" target="_top">TTL</a>
     *         of the video.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#WINDOW WINDOW}:
     *         Specified using the data-type corresponding to the {@code
     *         attribute}. For a window of size W, a video frame rendered for
     *         time t will visualize data in the interval [t-W,t]. The minimum
     *         window size is the interval between successive frames.  The
     *         minimum value is the default.  If a value less than the minimum
     *         value is specified, it is replaced with the minimum window size.
     *         Larger values will make changes throughout the video appear more
     *         smooth while smaller values will capture fast variations in the
     *         data.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#NO_ERROR_IF_EXISTS
     *         NO_ERROR_IF_EXISTS}: If {@code true}, does not return an error
     *         if the video already exists.  Ignored if {@code
     *         replace_if_exists} is {@code true}.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#REPLACE_IF_EXISTS
     *         REPLACE_IF_EXISTS}: If {@code true}, deletes any existing video
     *         with the same path before creating a new video.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}
     *                 <li> {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.CreateVideoRequest.Options#FALSE FALSE}.
     *         </ul>
     *         The default value is an empty {@link Map}.
     * 
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the video.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#WINDOW
     *                 WINDOW}: Specified using the data-type corresponding to
     *                 the {@code attribute}. For a window of size W, a video
     *                 frame rendered for time t will visualize data in the
     *                 interval [t-W,t]. The minimum window size is the
     *                 interval between successive frames.  The minimum value
     *                 is the default.  If a value less than the minimum value
     *                 is specified, it is replaced with the minimum window
     *                 size.  Larger values will make changes throughout the
     *                 video appear more smooth while smaller values will
     *                 capture fast variations in the data.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#NO_ERROR_IF_EXISTS
     *                 NO_ERROR_IF_EXISTS}: If {@code true}, does not return an
     *                 error if the video already exists.  Ignored if {@code
     *                 replace_if_exists} is {@code true}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#REPLACE_IF_EXISTS
     *                 REPLACE_IF_EXISTS}: If {@code true}, deletes any
     *                 existing video with the same path before creating a new
     *                 video.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public CreateVideoRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.attribute;

            case 1:
                return this.begin;

            case 2:
                return this.durationSeconds;

            case 3:
                return this.end;

            case 4:
                return this.framesPerSecond;

            case 5:
                return this.style;

            case 6:
                return this.path;

            case 7:
                return this.styleParameters;

            case 8:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.attribute = (String)value;
                break;

            case 1:
                this.begin = (String)value;
                break;

            case 2:
                this.durationSeconds = (Double)value;
                break;

            case 3:
                this.end = (String)value;
                break;

            case 4:
                this.framesPerSecond = (Double)value;
                break;

            case 5:
                this.style = (String)value;
                break;

            case 6:
                this.path = (String)value;
                break;

            case 7:
                this.styleParameters = (String)value;
                break;

            case 8:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        CreateVideoRequest that = (CreateVideoRequest)obj;

        return ( this.attribute.equals( that.attribute )
                 && this.begin.equals( that.begin )
                 && ( (Double)this.durationSeconds ).equals( (Double)that.durationSeconds )
                 && this.end.equals( that.end )
                 && ( (Double)this.framesPerSecond ).equals( (Double)that.framesPerSecond )
                 && this.style.equals( that.style )
                 && this.path.equals( that.path )
                 && this.styleParameters.equals( that.styleParameters )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "attribute" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.attribute ) );
        builder.append( ", " );
        builder.append( gd.toString( "begin" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.begin ) );
        builder.append( ", " );
        builder.append( gd.toString( "durationSeconds" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.durationSeconds ) );
        builder.append( ", " );
        builder.append( gd.toString( "end" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.end ) );
        builder.append( ", " );
        builder.append( gd.toString( "framesPerSecond" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.framesPerSecond ) );
        builder.append( ", " );
        builder.append( gd.toString( "style" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.style ) );
        builder.append( ", " );
        builder.append( gd.toString( "path" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.path ) );
        builder.append( ", " );
        builder.append( gd.toString( "styleParameters" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.styleParameters ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.attribute.hashCode();
        hashCode = (31 * hashCode) + this.begin.hashCode();
        hashCode = (31 * hashCode) + ((Double)this.durationSeconds).hashCode();
        hashCode = (31 * hashCode) + this.end.hashCode();
        hashCode = (31 * hashCode) + ((Double)this.framesPerSecond).hashCode();
        hashCode = (31 * hashCode) + this.style.hashCode();
        hashCode = (31 * hashCode) + this.path.hashCode();
        hashCode = (31 * hashCode) + this.styleParameters.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

}
