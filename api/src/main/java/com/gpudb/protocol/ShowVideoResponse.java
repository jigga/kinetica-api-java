/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#showVideo(ShowVideoRequest)}.
 */
public class ShowVideoResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowVideoResponse")
            .namespace("com.gpudb")
            .fields()
                .name("creationTimes").type().array().items().stringType().noDefault()
                .name("elapsedRenderTimeSeconds").type().array().items().longType().noDefault()
                .name("jobIds").type().array().items().longType().noDefault()
                .name("paths").type().array().items().stringType().noDefault()
                .name("renderedBytes").type().array().items().longType().noDefault()
                .name("renderedFrames").type().array().items().longType().noDefault()
                .name("renderedPercents").type().array().items().longType().noDefault()
                .name("requests").type().array().items().stringType().noDefault()
                .name("status").type().array().items().stringType().noDefault()
                .name("ttls").type().array().items().longType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private List<String> creationTimes;
    private List<Long> elapsedRenderTimeSeconds;
    private List<Long> jobIds;
    private List<String> paths;
    private List<Long> renderedBytes;
    private List<Long> renderedFrames;
    private List<Long> renderedPercents;
    private List<String> requests;
    private List<String> status;
    private List<Long> ttls;
    private Map<String, String> info;


    /**
     * Constructs a ShowVideoResponse object with default parameters.
     */
    public ShowVideoResponse() {
    }

    /**
     * 
     * @return Creation time for each video as an ISO-8601 datetime.
     * 
     */
    public List<String> getCreationTimes() {
        return creationTimes;
    }

    /**
     * 
     * @param creationTimes  Creation time for each video as an ISO-8601
     *                       datetime.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setCreationTimes(List<String> creationTimes) {
        this.creationTimes = (creationTimes == null) ? new ArrayList<String>() : creationTimes;
        return this;
    }

    /**
     * 
     * @return The elapsed time spent rendering each video in seconds.
     * 
     */
    public List<Long> getElapsedRenderTimeSeconds() {
        return elapsedRenderTimeSeconds;
    }

    /**
     * 
     * @param elapsedRenderTimeSeconds  The elapsed time spent rendering each
     *                                  video in seconds.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setElapsedRenderTimeSeconds(List<Long> elapsedRenderTimeSeconds) {
        this.elapsedRenderTimeSeconds = (elapsedRenderTimeSeconds == null) ? new ArrayList<Long>() : elapsedRenderTimeSeconds;
        return this;
    }

    /**
     * 
     * @return The job id of the rendering process, for each video that is
     *         still being rendered.
     * 
     */
    public List<Long> getJobIds() {
        return jobIds;
    }

    /**
     * 
     * @param jobIds  The job id of the rendering process, for each video that
     *                is still being rendered.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setJobIds(List<Long> jobIds) {
        this.jobIds = (jobIds == null) ? new ArrayList<Long>() : jobIds;
        return this;
    }

    /**
     * 
     * @return KIFS path to each video.
     * 
     */
    public List<String> getPaths() {
        return paths;
    }

    /**
     * 
     * @param paths  KIFS path to each video.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setPaths(List<String> paths) {
        this.paths = (paths == null) ? new ArrayList<String>() : paths;
        return this;
    }

    /**
     * 
     * @return The number of bytes emitted by the encoder for each video.
     * 
     */
    public List<Long> getRenderedBytes() {
        return renderedBytes;
    }

    /**
     * 
     * @param renderedBytes  The number of bytes emitted by the encoder for
     *                       each video.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setRenderedBytes(List<Long> renderedBytes) {
        this.renderedBytes = (renderedBytes == null) ? new ArrayList<Long>() : renderedBytes;
        return this;
    }

    /**
     * 
     * @return The number of frames rendered for each video.
     * 
     */
    public List<Long> getRenderedFrames() {
        return renderedFrames;
    }

    /**
     * 
     * @param renderedFrames  The number of frames rendered for each video.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setRenderedFrames(List<Long> renderedFrames) {
        this.renderedFrames = (renderedFrames == null) ? new ArrayList<Long>() : renderedFrames;
        return this;
    }

    /**
     * 
     * @return Percent completion of each video's rendering process (0-100)
     * 
     */
    public List<Long> getRenderedPercents() {
        return renderedPercents;
    }

    /**
     * 
     * @param renderedPercents  Percent completion of each video's rendering
     *                          process (0-100)
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setRenderedPercents(List<Long> renderedPercents) {
        this.renderedPercents = (renderedPercents == null) ? new ArrayList<Long>() : renderedPercents;
        return this;
    }

    /**
     * 
     * @return JSON-string reflecting each video's creation parameters.
     * 
     */
    public List<String> getRequests() {
        return requests;
    }

    /**
     * 
     * @param requests  JSON-string reflecting each video's creation
     *                  parameters.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setRequests(List<String> requests) {
        this.requests = (requests == null) ? new ArrayList<String>() : requests;
        return this;
    }

    /**
     * 
     * @return The status of the last rendered frame for each video.  Either OK
     *         or Error with a message indicating the nature of the error.
     * 
     */
    public List<String> getStatus() {
        return status;
    }

    /**
     * 
     * @param status  The status of the last rendered frame for each video.
     *                Either OK or Error with a message indicating the nature
     *                of the error.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setStatus(List<String> status) {
        this.status = (status == null) ? new ArrayList<String>() : status;
        return this;
    }

    /**
     * 
     * @return The remaining <a href="../../../../../../concepts/ttl/"
     *         target="_top">TTL</a>, in minutes, before the respective video
     *         expires (-1 if it will never expire).
     * 
     */
    public List<Long> getTtls() {
        return ttls;
    }

    /**
     * 
     * @param ttls  The remaining <a href="../../../../../../concepts/ttl/"
     *              target="_top">TTL</a>, in minutes, before the respective
     *              video expires (-1 if it will never expire).
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setTtls(List<Long> ttls) {
        this.ttls = (ttls == null) ? new ArrayList<Long>() : ttls;
        return this;
    }

    /**
     * 
     * @return Additional information.
     * 
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * 
     * @param info  Additional information.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public ShowVideoResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.creationTimes;

            case 1:
                return this.elapsedRenderTimeSeconds;

            case 2:
                return this.jobIds;

            case 3:
                return this.paths;

            case 4:
                return this.renderedBytes;

            case 5:
                return this.renderedFrames;

            case 6:
                return this.renderedPercents;

            case 7:
                return this.requests;

            case 8:
                return this.status;

            case 9:
                return this.ttls;

            case 10:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.creationTimes = (List<String>)value;
                break;

            case 1:
                this.elapsedRenderTimeSeconds = (List<Long>)value;
                break;

            case 2:
                this.jobIds = (List<Long>)value;
                break;

            case 3:
                this.paths = (List<String>)value;
                break;

            case 4:
                this.renderedBytes = (List<Long>)value;
                break;

            case 5:
                this.renderedFrames = (List<Long>)value;
                break;

            case 6:
                this.renderedPercents = (List<Long>)value;
                break;

            case 7:
                this.requests = (List<String>)value;
                break;

            case 8:
                this.status = (List<String>)value;
                break;

            case 9:
                this.ttls = (List<Long>)value;
                break;

            case 10:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowVideoResponse that = (ShowVideoResponse)obj;

        return ( this.creationTimes.equals( that.creationTimes )
                 && this.elapsedRenderTimeSeconds.equals( that.elapsedRenderTimeSeconds )
                 && this.jobIds.equals( that.jobIds )
                 && this.paths.equals( that.paths )
                 && this.renderedBytes.equals( that.renderedBytes )
                 && this.renderedFrames.equals( that.renderedFrames )
                 && this.renderedPercents.equals( that.renderedPercents )
                 && this.requests.equals( that.requests )
                 && this.status.equals( that.status )
                 && this.ttls.equals( that.ttls )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "creationTimes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.creationTimes ) );
        builder.append( ", " );
        builder.append( gd.toString( "elapsedRenderTimeSeconds" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.elapsedRenderTimeSeconds ) );
        builder.append( ", " );
        builder.append( gd.toString( "jobIds" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.jobIds ) );
        builder.append( ", " );
        builder.append( gd.toString( "paths" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.paths ) );
        builder.append( ", " );
        builder.append( gd.toString( "renderedBytes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.renderedBytes ) );
        builder.append( ", " );
        builder.append( gd.toString( "renderedFrames" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.renderedFrames ) );
        builder.append( ", " );
        builder.append( gd.toString( "renderedPercents" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.renderedPercents ) );
        builder.append( ", " );
        builder.append( gd.toString( "requests" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.requests ) );
        builder.append( ", " );
        builder.append( gd.toString( "status" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.status ) );
        builder.append( ", " );
        builder.append( gd.toString( "ttls" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.ttls ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.creationTimes.hashCode();
        hashCode = (31 * hashCode) + this.elapsedRenderTimeSeconds.hashCode();
        hashCode = (31 * hashCode) + this.jobIds.hashCode();
        hashCode = (31 * hashCode) + this.paths.hashCode();
        hashCode = (31 * hashCode) + this.renderedBytes.hashCode();
        hashCode = (31 * hashCode) + this.renderedFrames.hashCode();
        hashCode = (31 * hashCode) + this.renderedPercents.hashCode();
        hashCode = (31 * hashCode) + this.requests.hashCode();
        hashCode = (31 * hashCode) + this.status.hashCode();
        hashCode = (31 * hashCode) + this.ttls.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }

}
