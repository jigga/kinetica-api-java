/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#repartitionGraph(RepartitionGraphRequest)}.
 * <p>
 * Rebalances an existing partitioned graph.

 * IMPORTANT: It's highly recommended that you review the
 * <a href="../../../../../../graph_solver/network_graph_solver/"
 * target="_top">Network Graphs & Solvers</a>
 * concepts documentation, the
 * <a href="../../../../../../guides/graph_rest_guide/" target="_top">Graph
 * REST Tutorial</a>,
 * and/or some <a href="../../../../../../guide-tags/graph/"
 * target="_top">graph examples</a> before
 * using this endpoint.
 */
public class RepartitionGraphRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("RepartitionGraphRequest")
            .namespace("com.gpudb")
            .fields()
                .name("graphName").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * Optional parameters.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.RepartitionGraphRequest.Options#NEW_GRAPH_NAME
     * NEW_GRAPH_NAME}: If a non-empty value is specified, the original graph
     * will be kept
     * (non-default behaviour) and a new balanced graph will be created under
     * this given name.  When the
     * value is empty (default), the generated 'balanced' graph will replace
     * the original 'unbalanced'
     * graph under the same graph name.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.RepartitionGraphRequest.Options#SOURCE_NODE
     * SOURCE_NODE}: The distributed shortest path solve is run from this
     * source node to
     * all the nodes in the graph to create balaced partitions using the
     * iso-distance levels of the
     * solution.  The source node is selected by the rebalance algorithm
     * automatically (default case when
     * the value is an empty string). Otherwise, the user specified node is
     * used as the source.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.RepartitionGraphRequest.Options#SQL_REQUEST_AVRO_JSON
     * SQL_REQUEST_AVRO_JSON}:   The default value is ''.
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code options}.
     */
    public static final class Options {

        /**
         * If a non-empty value is specified, the original graph will be kept
         * (non-default behaviour) and a new balanced graph will be created
         * under this given name.  When the
         * value is empty (default), the generated 'balanced' graph will
         * replace the original 'unbalanced'
         * graph under the same graph name.  The default value is ''.
         */
        public static final String NEW_GRAPH_NAME = "new_graph_name";

        /**
         * The distributed shortest path solve is run from this source node to
         * all the nodes in the graph to create balaced partitions using the
         * iso-distance levels of the
         * solution.  The source node is selected by the rebalance algorithm
         * automatically (default case when
         * the value is an empty string). Otherwise, the user specified node is
         * used as the source.  The default value is ''.
         */
        public static final String SOURCE_NODE = "source_node";

        /**
         *   The default value is ''.
         */
        public static final String SQL_REQUEST_AVRO_JSON = "sql_request_avro_json";

        private Options() {  }
    }

    private String graphName;
    private Map<String, String> options;


    /**
     * Constructs a RepartitionGraphRequest object with default parameters.
     */
    public RepartitionGraphRequest() {
        graphName = "";
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs a RepartitionGraphRequest object with the specified
     * parameters.
     * 
     * @param graphName  Name of the graph resource to rebalance.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#NEW_GRAPH_NAME
     *                 NEW_GRAPH_NAME}: If a non-empty value is specified, the
     *                 original graph will be kept
     *                 (non-default behaviour) and a new balanced graph will be
     *                 created under this given name.  When the
     *                 value is empty (default), the generated 'balanced' graph
     *                 will replace the original 'unbalanced'
     *                 graph under the same graph name.  The default value is
     *                 ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#SOURCE_NODE
     *                 SOURCE_NODE}: The distributed shortest path solve is run
     *                 from this source node to
     *                 all the nodes in the graph to create balaced partitions
     *                 using the iso-distance levels of the
     *                 solution.  The source node is selected by the rebalance
     *                 algorithm automatically (default case when
     *                 the value is an empty string). Otherwise, the user
     *                 specified node is used as the source.  The default value
     *                 is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#SQL_REQUEST_AVRO_JSON
     *                 SQL_REQUEST_AVRO_JSON}:   The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     */
    public RepartitionGraphRequest(String graphName, Map<String, String> options) {
        this.graphName = (graphName == null) ? "" : graphName;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * 
     * @return Name of the graph resource to rebalance.
     * 
     */
    public String getGraphName() {
        return graphName;
    }

    /**
     * 
     * @param graphName  Name of the graph resource to rebalance.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public RepartitionGraphRequest setGraphName(String graphName) {
        this.graphName = (graphName == null) ? "" : graphName;
        return this;
    }

    /**
     * 
     * @return Optional parameters.
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.RepartitionGraphRequest.Options#NEW_GRAPH_NAME
     *         NEW_GRAPH_NAME}: If a non-empty value is specified, the original
     *         graph will be kept
     *         (non-default behaviour) and a new balanced graph will be created
     *         under this given name.  When the
     *         value is empty (default), the generated 'balanced' graph will
     *         replace the original 'unbalanced'
     *         graph under the same graph name.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.RepartitionGraphRequest.Options#SOURCE_NODE
     *         SOURCE_NODE}: The distributed shortest path solve is run from
     *         this source node to
     *         all the nodes in the graph to create balaced partitions using
     *         the iso-distance levels of the
     *         solution.  The source node is selected by the rebalance
     *         algorithm automatically (default case when
     *         the value is an empty string). Otherwise, the user specified
     *         node is used as the source.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.RepartitionGraphRequest.Options#SQL_REQUEST_AVRO_JSON
     *         SQL_REQUEST_AVRO_JSON}:   The default value is ''.
     *         </ul>
     *         The default value is an empty {@link Map}.
     * 
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#NEW_GRAPH_NAME
     *                 NEW_GRAPH_NAME}: If a non-empty value is specified, the
     *                 original graph will be kept
     *                 (non-default behaviour) and a new balanced graph will be
     *                 created under this given name.  When the
     *                 value is empty (default), the generated 'balanced' graph
     *                 will replace the original 'unbalanced'
     *                 graph under the same graph name.  The default value is
     *                 ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#SOURCE_NODE
     *                 SOURCE_NODE}: The distributed shortest path solve is run
     *                 from this source node to
     *                 all the nodes in the graph to create balaced partitions
     *                 using the iso-distance levels of the
     *                 solution.  The source node is selected by the rebalance
     *                 algorithm automatically (default case when
     *                 the value is an empty string). Otherwise, the user
     *                 specified node is used as the source.  The default value
     *                 is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#SQL_REQUEST_AVRO_JSON
     *                 SQL_REQUEST_AVRO_JSON}:   The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public RepartitionGraphRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.graphName;

            case 1:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.graphName = (String)value;
                break;

            case 1:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        RepartitionGraphRequest that = (RepartitionGraphRequest)obj;

        return ( this.graphName.equals( that.graphName )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "graphName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.graphName ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.graphName.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

}
