/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#getRecordsByColumn(GetRecordsByColumnRequest)
 * GPUdb.getRecordsByColumn}.
 * <p>
 * For a given table, retrieves the values from the requested column(s). Maps
 * of column name to the array of values as well as the column data type are
 * returned. This endpoint supports pagination with the {@link #getOffset()
 * offset} and {@link #getLimit() limit} parameters.
 * <p>
 * <a href="../../../../../../concepts/window/" target="_top">Window
 * functions</a>, which can perform operations like moving averages, are
 * available through this endpoint as well as {@link
 * com.gpudb.GPUdb#createProjection(CreateProjectionRequest)
 * GPUdb.createProjection}.
 * <p>
 * When using pagination, if the table (or the underlying table in the case of
 * a view) is modified (records are inserted, updated, or deleted) during a
 * call to the endpoint, the records or values retrieved may differ between
 * calls based on the type of the update, e.g., the contiguity across pages
 * cannot be relied upon.
 * <p>
 * If {@link #getTableName() tableName} is empty, selection is performed
 * against a single-row virtual table.  This can be useful in executing
 * temporal (<a
 * href="../../../../../../concepts/expressions/#date-time-functions"
 * target="_top">NOW()</a>), identity (<a
 * href="../../../../../../concepts/expressions/#user-security-functions"
 * target="_top">USER()</a>), or constant-based functions (<a
 * href="../../../../../../concepts/expressions/#scalar-functions"
 * target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).
 * <p>
 * The response is returned as a dynamic schema. For details see: <a
 * href="../../../../../../api/concepts/#dynamic-schemas" target="_top">dynamic
 * schemas documentation</a>.
 */
public class GetRecordsByColumnRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("GetRecordsByColumnRequest")
            .namespace("com.gpudb")
            .fields()
                .name("tableName").type().stringType().noDefault()
                .name("columnNames").type().array().items().stringType().noDefault()
                .name("offset").type().longType().noDefault()
                .name("limit").type().longType().noDefault()
                .name("encoding").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * A set of string constants for the {@link GetRecordsByColumnRequest}
     * parameter {@link #getEncoding() encoding}.
     * <p>
     * Specifies the encoding for returned records; either {@link
     * Encoding#BINARY BINARY} or {@link Encoding#JSON JSON}.
     */
    public static final class Encoding {
        public static final String BINARY = "binary";
        public static final String JSON = "json";

        private Encoding() {  }
    }

    /**
     * A set of string constants for the {@link GetRecordsByColumnRequest}
     * parameter {@link #getOptions() options}.
     */
    public static final class Options {
        /**
         * Optional filter expression to apply to the table.
         */
        public static final String EXPRESSION = "expression";

        /**
         * Optional column that the data should be sorted by. Used in
         * conjunction with {@link Options#SORT_ORDER SORT_ORDER}. The {@link
         * Options#ORDER_BY ORDER_BY} option can be used in lieu of {@link
         * Options#SORT_BY SORT_BY} / {@link Options#SORT_ORDER SORT_ORDER}.
         * The default value is ''.
         */
        public static final String SORT_BY = "sort_by";

        /**
         * String indicating how the returned values should be sorted - {@link
         * Options#ASCENDING ASCENDING} or {@link Options#DESCENDING
         * DESCENDING}. If {@link Options#SORT_ORDER SORT_ORDER} is provided,
         * {@link Options#SORT_BY SORT_BY} has to be provided.
         * Supported values:
         * <ul>
         *     <li>{@link Options#ASCENDING ASCENDING}
         *     <li>{@link Options#DESCENDING DESCENDING}
         * </ul>
         * The default value is {@link Options#ASCENDING ASCENDING}.
         */
        public static final String SORT_ORDER = "sort_order";

        public static final String ASCENDING = "ascending";
        public static final String DESCENDING = "descending";

        /**
         * Comma-separated list of the columns to be sorted by as well as the
         * sort direction, e.g., 'timestamp asc, x desc'. The default value is
         * ''.
         */
        public static final String ORDER_BY = "order_by";

        /**
         * If {@link Options#TRUE TRUE}, then WKT string columns will be
         * returned as WKB bytes.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String CONVERT_WKTS_TO_WKBS = "convert_wkts_to_wkbs";

        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * For multihead record retrieval without shard key expression -
         * specifies from which tom to retrieve data.
         */
        public static final String ROUTE_TO_TOM = "route_to_tom";

        private Options() {  }
    }

    private String tableName;
    private List<String> columnNames;
    private long offset;
    private long limit;
    private String encoding;
    private Map<String, String> options;

    /**
     * Constructs a GetRecordsByColumnRequest object with default parameters.
     */
    public GetRecordsByColumnRequest() {
        tableName = "";
        columnNames = new ArrayList<>();
        encoding = Encoding.BINARY;
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs a GetRecordsByColumnRequest object with the specified
     * parameters.
     *
     * @param tableName  Name of the table or view on which this operation will
     *                   be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  An empty
     *                   table name retrieves one record from a single-row
     *                   virtual table, where columns specified should be
     *                   constants or constant expressions.
     * @param columnNames  The list of column values to retrieve.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results). The default value is 0. The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or END_OF_SET (-9999) to indicate
     *               that the maximum number of results allowed by the server
     *               should be returned.  The number of records returned will
     *               never exceed the server's own limit, defined by the <a
     *               href="../../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration. Use {@link
     *               com.gpudb.protocol.GetRecordsByColumnResponse#getHasMoreRecords()
     *               hasMoreRecords} to see if more records exist in the result
     *               to be fetched, and {@code offset} & {@code limit} to
     *               request subsequent pages of results. The default value is
     *               -9999.
     * @param options  <ul>
     *                     <li>{@link Options#EXPRESSION EXPRESSION}: Optional
     *                         filter expression to apply to the table.
     *                     <li>{@link Options#SORT_BY SORT_BY}: Optional column
     *                         that the data should be sorted by. Used in
     *                         conjunction with {@link Options#SORT_ORDER
     *                         SORT_ORDER}. The {@link Options#ORDER_BY
     *                         ORDER_BY} option can be used in lieu of {@link
     *                         Options#SORT_BY SORT_BY} / {@link
     *                         Options#SORT_ORDER SORT_ORDER}. The default
     *                         value is ''.
     *                     <li>{@link Options#SORT_ORDER SORT_ORDER}: String
     *                         indicating how the returned values should be
     *                         sorted - {@link Options#ASCENDING ASCENDING} or
     *                         {@link Options#DESCENDING DESCENDING}. If {@link
     *                         Options#SORT_ORDER SORT_ORDER} is provided,
     *                         {@link Options#SORT_BY SORT_BY} has to be
     *                         provided.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#ASCENDING ASCENDING}
     *                             <li>{@link Options#DESCENDING DESCENDING}
     *                         </ul>
     *                         The default value is {@link Options#ASCENDING
     *                         ASCENDING}.
     *                     <li>{@link Options#ORDER_BY ORDER_BY}:
     *                         Comma-separated list of the columns to be sorted
     *                         by as well as the sort direction, e.g.,
     *                         'timestamp asc, x desc'. The default value is
     *                         ''.
     *                     <li>{@link Options#CONVERT_WKTS_TO_WKBS
     *                         CONVERT_WKTS_TO_WKBS}: If {@link Options#TRUE
     *                         TRUE}, then WKT string columns will be returned
     *                         as WKB bytes.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#ROUTE_TO_TOM ROUTE_TO_TOM}: For
     *                         multihead record retrieval without shard key
     *                         expression - specifies from which tom to
     *                         retrieve data.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public GetRecordsByColumnRequest(String tableName, List<String> columnNames, long offset, long limit, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.columnNames = (columnNames == null) ? new ArrayList<String>() : columnNames;
        this.offset = offset;
        this.limit = limit;
        this.encoding = Encoding.BINARY;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Constructs a GetRecordsByColumnRequest object with the specified
     * parameters.
     *
     * @param tableName  Name of the table or view on which this operation will
     *                   be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  An empty
     *                   table name retrieves one record from a single-row
     *                   virtual table, where columns specified should be
     *                   constants or constant expressions.
     * @param columnNames  The list of column values to retrieve.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results). The default value is 0. The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or END_OF_SET (-9999) to indicate
     *               that the maximum number of results allowed by the server
     *               should be returned.  The number of records returned will
     *               never exceed the server's own limit, defined by the <a
     *               href="../../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration. Use {@link
     *               com.gpudb.protocol.GetRecordsByColumnResponse#getHasMoreRecords()
     *               hasMoreRecords} to see if more records exist in the result
     *               to be fetched, and {@code offset} & {@code limit} to
     *               request subsequent pages of results. The default value is
     *               -9999.
     * @param encoding  Specifies the encoding for returned records; either
     *                  {@link Encoding#BINARY BINARY} or {@link Encoding#JSON
     *                  JSON}.
     *                  Supported values:
     *                  <ul>
     *                      <li>{@link Encoding#BINARY BINARY}
     *                      <li>{@link Encoding#JSON JSON}
     *                  </ul>
     *                  The default value is {@link Encoding#BINARY BINARY}.
     * @param options  <ul>
     *                     <li>{@link Options#EXPRESSION EXPRESSION}: Optional
     *                         filter expression to apply to the table.
     *                     <li>{@link Options#SORT_BY SORT_BY}: Optional column
     *                         that the data should be sorted by. Used in
     *                         conjunction with {@link Options#SORT_ORDER
     *                         SORT_ORDER}. The {@link Options#ORDER_BY
     *                         ORDER_BY} option can be used in lieu of {@link
     *                         Options#SORT_BY SORT_BY} / {@link
     *                         Options#SORT_ORDER SORT_ORDER}. The default
     *                         value is ''.
     *                     <li>{@link Options#SORT_ORDER SORT_ORDER}: String
     *                         indicating how the returned values should be
     *                         sorted - {@link Options#ASCENDING ASCENDING} or
     *                         {@link Options#DESCENDING DESCENDING}. If {@link
     *                         Options#SORT_ORDER SORT_ORDER} is provided,
     *                         {@link Options#SORT_BY SORT_BY} has to be
     *                         provided.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#ASCENDING ASCENDING}
     *                             <li>{@link Options#DESCENDING DESCENDING}
     *                         </ul>
     *                         The default value is {@link Options#ASCENDING
     *                         ASCENDING}.
     *                     <li>{@link Options#ORDER_BY ORDER_BY}:
     *                         Comma-separated list of the columns to be sorted
     *                         by as well as the sort direction, e.g.,
     *                         'timestamp asc, x desc'. The default value is
     *                         ''.
     *                     <li>{@link Options#CONVERT_WKTS_TO_WKBS
     *                         CONVERT_WKTS_TO_WKBS}: If {@link Options#TRUE
     *                         TRUE}, then WKT string columns will be returned
     *                         as WKB bytes.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#ROUTE_TO_TOM ROUTE_TO_TOM}: For
     *                         multihead record retrieval without shard key
     *                         expression - specifies from which tom to
     *                         retrieve data.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public GetRecordsByColumnRequest(String tableName, List<String> columnNames, long offset, long limit, String encoding, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.columnNames = (columnNames == null) ? new ArrayList<String>() : columnNames;
        this.offset = offset;
        this.limit = limit;
        this.encoding = (encoding == null) ? Encoding.BINARY : encoding;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Name of the table or view on which this operation will be performed, in
     * [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.  An empty table name retrieves
     * one record from a single-row virtual table, where columns specified
     * should be constants or constant expressions.
     *
     * @return The current value of {@code tableName}.
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * Name of the table or view on which this operation will be performed, in
     * [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.  An empty table name retrieves
     * one record from a single-row virtual table, where columns specified
     * should be constants or constant expressions.
     *
     * @param tableName  The new value for {@code tableName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsByColumnRequest setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * The list of column values to retrieve.
     *
     * @return The current value of {@code columnNames}.
     */
    public List<String> getColumnNames() {
        return columnNames;
    }

    /**
     * The list of column values to retrieve.
     *
     * @param columnNames  The new value for {@code columnNames}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsByColumnRequest setColumnNames(List<String> columnNames) {
        this.columnNames = (columnNames == null) ? new ArrayList<String>() : columnNames;
        return this;
    }

    /**
     * A positive integer indicating the number of initial results to skip
     * (this can be useful for paging through the results). The default value
     * is 0. The minimum allowed value is 0. The maximum allowed value is
     * MAX_INT.
     *
     * @return The current value of {@code offset}.
     */
    public long getOffset() {
        return offset;
    }

    /**
     * A positive integer indicating the number of initial results to skip
     * (this can be useful for paging through the results). The default value
     * is 0. The minimum allowed value is 0. The maximum allowed value is
     * MAX_INT.
     *
     * @param offset  The new value for {@code offset}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsByColumnRequest setOffset(long offset) {
        this.offset = offset;
        return this;
    }

    /**
     * A positive integer indicating the maximum number of results to be
     * returned, or END_OF_SET (-9999) to indicate that the maximum number of
     * results allowed by the server should be returned.  The number of records
     * returned will never exceed the server's own limit, defined by the <a
     * href="../../../../../../config/#config-main-general"
     * target="_top">max_get_records_size</a> parameter in the server
     * configuration. Use {@link
     * com.gpudb.protocol.GetRecordsByColumnResponse#getHasMoreRecords()
     * hasMoreRecords} to see if more records exist in the result to be
     * fetched, and {@link #getOffset() offset} & {@link #getLimit() limit} to
     * request subsequent pages of results. The default value is -9999.
     *
     * @return The current value of {@code limit}.
     */
    public long getLimit() {
        return limit;
    }

    /**
     * A positive integer indicating the maximum number of results to be
     * returned, or END_OF_SET (-9999) to indicate that the maximum number of
     * results allowed by the server should be returned.  The number of records
     * returned will never exceed the server's own limit, defined by the <a
     * href="../../../../../../config/#config-main-general"
     * target="_top">max_get_records_size</a> parameter in the server
     * configuration. Use {@link
     * com.gpudb.protocol.GetRecordsByColumnResponse#getHasMoreRecords()
     * hasMoreRecords} to see if more records exist in the result to be
     * fetched, and {@link #getOffset() offset} & {@link #getLimit() limit} to
     * request subsequent pages of results. The default value is -9999.
     *
     * @param limit  The new value for {@code limit}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsByColumnRequest setLimit(long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Specifies the encoding for returned records; either {@link
     * Encoding#BINARY BINARY} or {@link Encoding#JSON JSON}.
     * Supported values:
     * <ul>
     *     <li>{@link Encoding#BINARY BINARY}
     *     <li>{@link Encoding#JSON JSON}
     * </ul>
     * The default value is {@link Encoding#BINARY BINARY}.
     *
     * @return The current value of {@code encoding}.
     */
    public String getEncoding() {
        return encoding;
    }

    /**
     * Specifies the encoding for returned records; either {@link
     * Encoding#BINARY BINARY} or {@link Encoding#JSON JSON}.
     * Supported values:
     * <ul>
     *     <li>{@link Encoding#BINARY BINARY}
     *     <li>{@link Encoding#JSON JSON}
     * </ul>
     * The default value is {@link Encoding#BINARY BINARY}.
     *
     * @param encoding  The new value for {@code encoding}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsByColumnRequest setEncoding(String encoding) {
        this.encoding = (encoding == null) ? Encoding.BINARY : encoding;
        return this;
    }

    /**
     * <ul>
     *     <li>{@link Options#EXPRESSION EXPRESSION}: Optional filter
     *         expression to apply to the table.
     *     <li>{@link Options#SORT_BY SORT_BY}: Optional column that the data
     *         should be sorted by. Used in conjunction with {@link
     *         Options#SORT_ORDER SORT_ORDER}. The {@link Options#ORDER_BY
     *         ORDER_BY} option can be used in lieu of {@link Options#SORT_BY
     *         SORT_BY} / {@link Options#SORT_ORDER SORT_ORDER}. The default
     *         value is ''.
     *     <li>{@link Options#SORT_ORDER SORT_ORDER}: String indicating how the
     *         returned values should be sorted - {@link Options#ASCENDING
     *         ASCENDING} or {@link Options#DESCENDING DESCENDING}. If {@link
     *         Options#SORT_ORDER SORT_ORDER} is provided, {@link
     *         Options#SORT_BY SORT_BY} has to be provided.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#ASCENDING ASCENDING}
     *             <li>{@link Options#DESCENDING DESCENDING}
     *         </ul>
     *         The default value is {@link Options#ASCENDING ASCENDING}.
     *     <li>{@link Options#ORDER_BY ORDER_BY}: Comma-separated list of the
     *         columns to be sorted by as well as the sort direction, e.g.,
     *         'timestamp asc, x desc'. The default value is ''.
     *     <li>{@link Options#CONVERT_WKTS_TO_WKBS CONVERT_WKTS_TO_WKBS}: If
     *         {@link Options#TRUE TRUE}, then WKT string columns will be
     *         returned as WKB bytes.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#ROUTE_TO_TOM ROUTE_TO_TOM}: For multihead record
     *         retrieval without shard key expression - specifies from which
     *         tom to retrieve data.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @return The current value of {@code options}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * <ul>
     *     <li>{@link Options#EXPRESSION EXPRESSION}: Optional filter
     *         expression to apply to the table.
     *     <li>{@link Options#SORT_BY SORT_BY}: Optional column that the data
     *         should be sorted by. Used in conjunction with {@link
     *         Options#SORT_ORDER SORT_ORDER}. The {@link Options#ORDER_BY
     *         ORDER_BY} option can be used in lieu of {@link Options#SORT_BY
     *         SORT_BY} / {@link Options#SORT_ORDER SORT_ORDER}. The default
     *         value is ''.
     *     <li>{@link Options#SORT_ORDER SORT_ORDER}: String indicating how the
     *         returned values should be sorted - {@link Options#ASCENDING
     *         ASCENDING} or {@link Options#DESCENDING DESCENDING}. If {@link
     *         Options#SORT_ORDER SORT_ORDER} is provided, {@link
     *         Options#SORT_BY SORT_BY} has to be provided.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#ASCENDING ASCENDING}
     *             <li>{@link Options#DESCENDING DESCENDING}
     *         </ul>
     *         The default value is {@link Options#ASCENDING ASCENDING}.
     *     <li>{@link Options#ORDER_BY ORDER_BY}: Comma-separated list of the
     *         columns to be sorted by as well as the sort direction, e.g.,
     *         'timestamp asc, x desc'. The default value is ''.
     *     <li>{@link Options#CONVERT_WKTS_TO_WKBS CONVERT_WKTS_TO_WKBS}: If
     *         {@link Options#TRUE TRUE}, then WKT string columns will be
     *         returned as WKB bytes.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#ROUTE_TO_TOM ROUTE_TO_TOM}: For multihead record
     *         retrieval without shard key expression - specifies from which
     *         tom to retrieve data.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @param options  The new value for {@code options}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsByColumnRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableName;

            case 1:
                return this.columnNames;

            case 2:
                return this.offset;

            case 3:
                return this.limit;

            case 4:
                return this.encoding;

            case 5:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableName = (String)value;
                break;

            case 1:
                this.columnNames = (List<String>)value;
                break;

            case 2:
                this.offset = (Long)value;
                break;

            case 3:
                this.limit = (Long)value;
                break;

            case 4:
                this.encoding = (String)value;
                break;

            case 5:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        GetRecordsByColumnRequest that = (GetRecordsByColumnRequest)obj;

        return ( this.tableName.equals( that.tableName )
                 && this.columnNames.equals( that.columnNames )
                 && ( this.offset == that.offset )
                 && ( this.limit == that.limit )
                 && this.encoding.equals( that.encoding )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableName ) );
        builder.append( ", " );
        builder.append( gd.toString( "columnNames" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.columnNames ) );
        builder.append( ", " );
        builder.append( gd.toString( "offset" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.offset ) );
        builder.append( ", " );
        builder.append( gd.toString( "limit" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.limit ) );
        builder.append( ", " );
        builder.append( gd.toString( "encoding" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.encoding ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + this.columnNames.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.offset).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.limit).hashCode();
        hashCode = (31 * hashCode) + this.encoding.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }
}
