/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.generic.GenericData;

/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#getRecords(GetRecordsRequest) GPUdb.getRecords}.
 *
 * @param <T>  The type of object being processed.
 *
 */
public class GetRecordsResponse<T> {
    private String tableName;
    private String typeName;
    private String typeSchema;
    private List<T> data;
    private long totalNumberOfRecords;
    private boolean hasMoreRecords;
    private Map<String, String> info;

    /**
     * Constructs a GetRecordsResponse object with default parameters.
     */
    public GetRecordsResponse() {
    }

    /**
     * Value of {@link com.gpudb.protocol.GetRecordsRequest#getTableName()
     * tableName}.
     *
     * @return The current value of {@code tableName}.
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * Value of {@link com.gpudb.protocol.GetRecordsRequest#getTableName()
     * tableName}.
     *
     * @param tableName  The new value for {@code tableName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsResponse<T> setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * @return The current value of {@code typeName}.
     */
    public String getTypeName() {
        return typeName;
    }

    /**
     * @param typeName  The new value for {@code typeName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsResponse<T> setTypeName(String typeName) {
        this.typeName = (typeName == null) ? "" : typeName;
        return this;
    }

    /**
     * Avro schema of {@link #getData() data} or {@code recordsJson}
     *
     * @return The current value of {@code typeSchema}.
     */
    public String getTypeSchema() {
        return typeSchema;
    }

    /**
     * Avro schema of {@link #getData() data} or {@code recordsJson}
     *
     * @param typeSchema  The new value for {@code typeSchema}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsResponse<T> setTypeSchema(String typeSchema) {
        this.typeSchema = (typeSchema == null) ? "" : typeSchema;
        return this;
    }

    /**
     * If the {@link com.gpudb.protocol.GetRecordsRequest#getEncoding()
     * encoding} was 'binary', then this list contains the binary encoded
     * records retrieved from the table, otherwise not populated.
     *
     * @return The current value of {@code data}.
     */
    public List<T> getData() {
        return data;
    }

    /**
     * If the {@link com.gpudb.protocol.GetRecordsRequest#getEncoding()
     * encoding} was 'binary', then this list contains the binary encoded
     * records retrieved from the table, otherwise not populated.
     *
     * @param data  The new value for {@code data}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsResponse<T> setData(List<T> data) {
        this.data = (data == null) ? new ArrayList<T>() : data;
        return this;
    }

    /**
     * Total/Filtered number of records.
     *
     * @return The current value of {@code totalNumberOfRecords}.
     */
    public long getTotalNumberOfRecords() {
        return totalNumberOfRecords;
    }

    /**
     * Total/Filtered number of records.
     *
     * @param totalNumberOfRecords  The new value for {@code
     *                              totalNumberOfRecords}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsResponse<T> setTotalNumberOfRecords(long totalNumberOfRecords) {
        this.totalNumberOfRecords = totalNumberOfRecords;
        return this;
    }

    /**
     * Too many records. Returned a partial set.
     *
     * @return The current value of {@code hasMoreRecords}.
     */
    public boolean getHasMoreRecords() {
        return hasMoreRecords;
    }

    /**
     * Too many records. Returned a partial set.
     *
     * @param hasMoreRecords  The new value for {@code hasMoreRecords}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsResponse<T> setHasMoreRecords(boolean hasMoreRecords) {
        this.hasMoreRecords = hasMoreRecords;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsResponse<T> setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }
    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        GetRecordsResponse that = (GetRecordsResponse)obj;

        return ( this.tableName.equals( that.tableName )
                 && this.typeName.equals( that.typeName )
                 && this.typeSchema.equals( that.typeSchema )
                 && this.data.equals( that.data )
                 && ( this.totalNumberOfRecords == that.totalNumberOfRecords )
                 && ( this.hasMoreRecords == that.hasMoreRecords )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableName ) );
        builder.append( ", " );
        builder.append( gd.toString( "typeName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.typeName ) );
        builder.append( ", " );
        builder.append( gd.toString( "typeSchema" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.typeSchema ) );
        builder.append( ", " );
        builder.append( gd.toString( "data" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.data ) );
        builder.append( ", " );
        builder.append( gd.toString( "totalNumberOfRecords" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.totalNumberOfRecords ) );
        builder.append( ", " );
        builder.append( gd.toString( "hasMoreRecords" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.hasMoreRecords ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + this.typeName.hashCode();
        hashCode = (31 * hashCode) + this.typeSchema.hashCode();
        hashCode = (31 * hashCode) + this.data.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.totalNumberOfRecords).hashCode();
        hashCode = (31 * hashCode) + ((Boolean)this.hasMoreRecords).hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}
